{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\src\\components\\LayersList.vue?vue&type=style&index=0&id=77152330&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\src\\components\\LayersList.vue","mtime":1707906852000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\less-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBmb250LWZhY2UgewogICAgZm9udC1mYW1pbHk6ICdDdXN0b21Gb250JzsgLyogU3BlY2lmeSB0aGUgbmFtZSBvZiB5b3VyIGZvbnQgKi8KICAgIHNyYzogdXJsKCcuLi9hc3NldHMvZm9udHMvTW9udHNlcnJhdC1TZW1pQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7IC8qIEFkanVzdCB0aGUgcGF0aCB0byB5b3VyIGZvbnQgZmlsZSAqLwogICAgLyogWW91IGNhbiBpbmNsdWRlIGFkZGl0aW9uYWwgZm9udCB2YXJpYXRpb25zIChlLmcuLCBib2xkLCBpdGFsaWMpIGlmIGF2YWlsYWJsZSAqLwp9CgovLyAuZmllbGROYW1lewovLyAgICAgZm9udC1mYW1pbHk6ICdDdXN0b21Gb250JywgQXJpYWwsIHNhbnMtc2VyaWY7ICAKLy8gfQoucm9vdCwKLmxheWVycy1oZWFkZXIsCi5sYXllci1pdGVtIGxhYmVsIHsKICAgIGZvbnQtZmFtaWx5OiAnQ3VzdG9tRm9udCcsIEFyaWFsLCBzYW5zLXNlcmlmOyAvKiBVc2UgeW91ciBjdXN0b20gZm9udCBhcyBhIGZhbGxiYWNrICovCn0KLnJvb3QgewogICAgaGVpZ2h0OiAxMDAlOwogICAgbWF4LWhlaWdodDogMTAwJTsKICAgIHdpZHRoOiAzMDBweDsKICAgIGZvbnQtZmFtaWx5OiAnQ3VzdG9tRm9udCcsIEFyaWFsLCBzYW5zLXNlcmlmOwp9CgoubGF5ZXJzLWxpc3QgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBwYWRkaW5nOiA4cHg7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKICAgIHdpZHRoOiAyOHZoOwp9CgoubGF5ZXJzLWhlYWRlciB7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICBjb2xvcjogIzMzMzsKfQoKLmxheWVyLWl0ZW0gewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBtYXJnaW4tYm90dG9tOiA4cHg7Cn0KCi5sYXllci1pdGVtIGlucHV0W3R5cGU9ImNoZWNrYm94Il0gewogICAgbWFyZ2luLXJpZ2h0OiA1cHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5sYXllci1pdGVtIGxhYmVsIHsKICAgIGNvbG9yOiAjNTU1OwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoubGF5ZXItaXRlbSBsYWJlbDpob3ZlciB7CiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKfQoKLyogU3R5bGUgZm9yIGNoZWNrYm94ZXMgd2hlbiBjaGVja2VkICovCi5sYXllci1pdGVtIGlucHV0W3R5cGU9ImNoZWNrYm94Il06Y2hlY2tlZCArIGxhYmVsIHsKICAgIGNvbG9yOiAjMGQ4ODQwOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi8qIFN0eWxlIGZvciBjaGVja2JveGVzICovCmlucHV0W3R5cGU9ImNoZWNrYm94Il0gewogICAgbWFyZ2luLXJpZ2h0OiA1cHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi8qIFN0eWxlIGZvciBjaGVja2JveGVzIHdoZW4gY2hlY2tlZCAqLwppbnB1dFt0eXBlPSJjaGVja2JveCJdOmNoZWNrZWQgKyBsYWJlbCB7CiAgICBjb2xvcjogIzA3YmU1NDsgLyogQ2hhbmdlIHRleHQgY29sb3Igd2hlbiBjaGVja2VkICovCiAgICBmb250LXdlaWdodDogYm9sZDsKfQoKLyogU3R5bGUgZm9yIGNoZWNrYm94ZXMgd2hlbiBob3ZlcmVkICovCmlucHV0W3R5cGU9ImNoZWNrYm94Il06aG92ZXIgewogICAgb3BhY2l0eTogMC43Owp9CgovKiBTdHlsZSBmb3IgbGF5ZXIgaXRlbXMgd2hlbiBob3ZlcmVkICovCi5sYXllci1pdGVtOmhvdmVyIHsKICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogQWRkIGJvcmRlciByYWRpdXMgd2hlbiBob3ZlcmVkICovCn0KCg=="},{"version":3,"sources":["LayersList.vue"],"names":[],"mappings":";AAoEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"LayersList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<div class=\"root\">\n    <div class=\"layers-list\">\n        <div class=\"layers-header\">Layers</div>\n        <div v-if=\"layers !== null\" class=\"layer-item\">\n            <input type=\"checkbox\" :checked=\"showAll\" @change=\"_ToggleAll\"/>\n            <label class=\"text-italic\">All layers</label>\n        </div>\n        <div v-if=\"layers !== null\" v-for=\"layer in layers\" :key=\"layer.name\" class=\"layer-item\">\n            <!-- <div class=\"layer-color\" :style=\"{backgroundColor: _GetCssColor(layer.color)}\"></div> -->\n            <input type=\"checkbox\" :checked=\"layer.isVisible\" @change=\"e => _ToggleLayer(layer, e)\"/>\n            <label class=\"fieldName\">{{layer.displayName}}</label>\n        </div>\n    </div>\n</div>\n\n</template>\n\n<script>\n\nexport default {\n    name: \"LayersList\",\n\n    props: {\n        layers: {\n            /* Expecting array of {name: string, color: number, isVisible: boolean} */\n            type: Array,\n            default: null\n        }\n    },\n\n    watch: {\n        layers() {\n            this.showAll = null\n        }\n    },\n\n    data() {\n        return {\n            showAll: null\n        }\n    },\n\n    methods: {\n        _ToggleLayer(layer, newState) {\n            this.$emit(\"toggleLayer\", layer, newState.target.checked)\n            this.showAll = null\n        },\n\n        _ToggleAll(newState) {\n            this.showAll = newState.target.checked\n            this.$emit(\"toggleAll\", newState.target.checked)\n        },\n\n        _GetCssColor(value) {\n            let s = value.toString(16)\n            while (s.length < 6) {\n                s = \"0\" + s\n            }\n            return \"#\" + s\n        }\n    }\n}\n\n</script>\n\n<style scoped lang=\"less\">\n@font-face {\n    font-family: 'CustomFont'; /* Specify the name of your font */\n    src: url('../assets/fonts/Montserrat-SemiBold.ttf') format('truetype'); /* Adjust the path to your font file */\n    /* You can include additional font variations (e.g., bold, italic) if available */\n}\n\n// .fieldName{\n//     font-family: 'CustomFont', Arial, sans-serif;  \n// }\n.root,\n.layers-header,\n.layer-item label {\n    font-family: 'CustomFont', Arial, sans-serif; /* Use your custom font as a fallback */\n}\n.root {\n    height: 100%;\n    max-height: 100%;\n    width: 300px;\n    font-family: 'CustomFont', Arial, sans-serif;\n}\n\n.layers-list {\n    display: flex;\n    flex-direction: column;\n    padding: 8px;\n    border-radius: 8px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n    width: 28vh;\n}\n\n.layers-header {\n    font-weight: bold;\n    margin-bottom: 10px;\n    color: #333;\n}\n\n.layer-item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n}\n\n.layer-item input[type=\"checkbox\"] {\n    margin-right: 5px;\n    cursor: pointer;\n}\n\n.layer-item label {\n    color: #555;\n    cursor: pointer;\n}\n\n.layer-item label:hover {\n    text-decoration: underline;\n}\n\n/* Style for checkboxes when checked */\n.layer-item input[type=\"checkbox\"]:checked + label {\n    color: #0d8840;\n    font-weight: bold;\n}\n\n/* Style for checkboxes */\ninput[type=\"checkbox\"] {\n    margin-right: 5px;\n    cursor: pointer;\n}\n\n/* Style for checkboxes when checked */\ninput[type=\"checkbox\"]:checked + label {\n    color: #07be54; /* Change text color when checked */\n    font-weight: bold;\n}\n\n/* Style for checkboxes when hovered */\ninput[type=\"checkbox\"]:hover {\n    opacity: 0.7;\n}\n\n/* Style for layer items when hovered */\n.layer-item:hover {\n    border-radius: 5px; /* Add border radius when hovered */\n}\n\n</style>\n"]}]}