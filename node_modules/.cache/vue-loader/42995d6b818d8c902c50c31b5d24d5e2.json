{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\src\\PdfHome2.vue?vue&type=style&index=0&id=7a9d7c4c&lang=css&","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\src\\PdfHome2.vue","mtime":1712134121409},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIEFkZCBDU1Mgc3R5bGluZyAqLwo="},{"version":3,"sources":["PdfHome2.vue"],"names":[],"mappings":";AAyFA","file":"PdfHome2.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <div id=\"pdf-viewer\">\r\n      <input type=\"file\" @change=\"openPdf\" accept=\".pdf\">\r\n      <input type=\"file\" @change=\"openDwgDxf\" accept=\".dwg,.dxf\">\r\n      <canvas ref=\"canvas\"></canvas>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Dimension</th>\r\n            <th>Upper Tolerance</th>\r\n            <th>Lower Tolerance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(dimension, index) in dimensions\" :key=\"index\">\r\n            <td>{{ index + 1 }}</td>\r\n            <td>{{ dimension.value }}</td>\r\n            <td>{{ dimension.upperTolerance }}</td>\r\n            <td>{{ dimension.lowerTolerance }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n//   import pdfjsLib from 'pdfjs-dist';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        pdfPath: '',\r\n        pdfDocument: null,\r\n        currentPage: null,\r\n        coverRect: null,\r\n        zoomFactor: 1.0,\r\n        dimensions: []\r\n      }\r\n    },\r\n    methods: {\r\n      openPdf(event) {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            this.pdfPath = e.target.result;\r\n            this.renderPdf();\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      },\r\n      openDwgDxf(event) {\r\n        // Implement DWG/DXF file handling\r\n      },\r\n      renderPdf() {\r\n        const canvas = this.$refs.canvas;\r\n        const context = canvas.getContext('2d');\r\n        \r\n        pdfjsLib.getDocument(this.pdfPath).promise.then(pdf => {\r\n          this.pdfDocument = pdf;\r\n          this.showPage(1); // Render first page\r\n        });\r\n      },\r\n      showPage(pageNumber) {\r\n        this.pdfDocument.getPage(pageNumber).then(page => {\r\n          this.currentPage = page;\r\n          const viewport = page.getViewport({ scale: 1 });\r\n          const canvas = this.$refs.canvas;\r\n          const context = canvas.getContext('2d');\r\n          canvas.width = viewport.width;\r\n          canvas.height = viewport.height;\r\n          \r\n          const renderContext = {\r\n            canvasContext: context,\r\n            viewport: viewport\r\n          };\r\n          page.render(renderContext);\r\n        });\r\n      },\r\n      // Implement other methods such as mouse event handlers, zooming, dimension extraction, etc.\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  /* Add CSS styling */\r\n  </style>\r\n  "]}]}