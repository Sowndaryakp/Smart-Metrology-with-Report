{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\src\\DxfHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\src\\DxfHome.vue","mtime":1713504437795},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI- Running Projects\\PiWeb Running\\PiWeb-CMTI-Pdf trying\\1stApril\\Trying\\PiWeb-CMTI (2)\\PiWeb-CMTI\\node_modules\\vue-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DxfHome.vue"],"names":[],"mappings":";AAqJA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DxfHome.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <q-layout view=\"hHh lpr fff\" data-nosnippet>\r\n    <q-header>\r\n      <q-card style=\"background-color: white; color: black; height: 80px; display: flex; justify-content: center; align-items: center;\">\r\n        <!-- Set background color to white and text color to black -->\r\n        <q-toolbar class=\"navbarContent\">\r\n          <div class=\"leftNav\">\r\n            <img src=\"./assets/images/cmti.png\" alt=\"Logo\" class=\"Logo\" height=\"70\" width=\"120\" />\r\n            <q-file color=\"black\" label-color=\"black\" filled bottom-slots clearable dense :value=\"inputFile\" label=\"Select file or drag here\" style=\"max-width: 300px;\" accept=\".dxf\" class=\"selectfile q-ml-xl\"\r\n            @input=\"_OnFileSelected\" @clear=\"_OnFileCleared\" >\r\n              <template v-slot:before>\r\n                <q-icon name=\"folder_open\" color=\"black\" />\r\n              </template>\r\n             <template v-slot:after>\r\n                <q-btn dense flat label=\"URL\" @click=\"urlDialog = true\" />\r\n              </template>\r\n            </q-file>\r\n              <!-- <div class=\"q-pa-md q-gutter-sm\" >\r\n                  <q-btn push color=\"white\" text-color=\"primary\" label=\"Open\" @click=\"openPreviousFiles\"></q-btn>\r\n              </div> -->\r\n              <!-- <div class=\"q-pa-md q-gutter-sm\" >\r\n                  <q-btn push color=\"white\" text-color=\"primary\" label=\"Pdf Viewer\" @click=\"goToPdf\"></q-btn>\r\n              </div> -->\r\n          </div>\r\n          <div class=\"fileCenter\">\r\n            <q-toolbar-title :shrink=\"true\" class=\"logoname\">SMART METROLOGY</q-toolbar-title>\r\n          </div>\r\n          <button @click=\"goToHome\" class=\"home-btn\">Home</button>\r\n\r\n          <div>\r\n            <div class=\"info-icon\" @click=\"openInfoPopup\">\r\n              <img width=\"32\" height=\"32\" src=\"https://img.icons8.com/glyph-neue/64/4D4D4D/info.png\" alt=\"info\"/>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div>\r\n            <div class=\"user-icon\" @click=\"openUserPopup\">\r\n              <img src=\"https://img.icons8.com/ios-glyphs/30/4D4D4D/user--v1.png\" alt=\"User Icon\" />\r\n            </div>\r\n          </div>\r\n        </q-toolbar>\r\n      </q-card>\r\n    </q-header>\r\n    <q-page-container classname=\"\">\r\n      <ViewerPage :dxfUrl=\"dxfUrl\" @dxf-file-loaded=\"handleDxfFileLoaded\" @submit-data=\"handleSubmitData\" @set-data=\"onSubmitDataTable\">\r\n        <div v-if=\"inputFile === null\" class=\"centralUploader row justify-center items-center\">\r\n          <div class=\"col-auto\" style=\"width: 300px;\">\r\n            <q-file\r\n              filled\r\n              bottom-slots\r\n              clearable\r\n              :value=\"inputFile\"\r\n              label=\"Select file or drag here\"\r\n              accept=\".dxf\"\r\n              class=\"col\"\r\n              @input=\"_OnFileSelected\"\r\n              @clear=\"_OnFileCleared\"\r\n            >\r\n              <template v-slot:before>\r\n                <q-icon name=\"folder_open\" size=\"xl\" />\r\n              </template>\r\n              <!-- <template v-slot:hint>\r\n                            <span>File is processed locally in your browser</span>\r\n                        </template> -->\r\n            </q-file>\r\n          </div>\r\n          <div class=\"col-auto q-mx-lg q-pb-lg\">\r\n            <q-btn label=\"Load URL\" @click=\"urlDialog = true\" />\r\n          </div>\r\n        </div>\r\n      </ViewerPage>\r\n    </q-page-container>\r\n\r\n    <div class=\"info-popup\" v-if=\"isInfoPopupOpen\">\r\n      <div class=\"info-info\">\r\n        <div class=\"info-details\">\r\n          <p>We can accommodate and export DXF files in various versions, including <strong>R12, R2000, R2004, R2007, R2010, R2013,</strong> and <strong>R2018.</strong></p>\r\n\r\n        </div>\r\n        <div class=\"info-actions\">\r\n          <button class=\"cancel-button\" @click=\"closeInfoPopup\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"user-popup\" v-if=\"isUserPopupOpen\">\r\n      <div class=\"user-info\">\r\n        <div class=\"user-details\">\r\n          <div class=\"username\">CMTI</div>\r\n          <div class=\"email\">cmti@gmail.com</div>\r\n        </div>\r\n        <div class=\"user-actions\">\r\n          <button class=\"cancel-button\" @click=\"closeUserPopup\">Cancel</button>\r\n          <button class=\"logout-button\">Logout</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n   \r\n\r\n    <q-dialog v-model=\"urlDialog\">\r\n      <q-card>\r\n        <q-card-section class=\"row items-center q-pb-sm\">\r\n          <div class=\"text-h6\">Load URL</div>\r\n          <q-space />\r\n          <q-btn icon=\"close\" flat round dense v-close-popup />\r\n        </q-card-section>\r\n        <q-separator />\r\n        <q-card-section>\r\n          <div class=\"q-mb-lg\">\r\n            <a href=\"https://startpage.com/sp/search?q=SECTION%20HEADER%20filetype:dxf\" target=\"_blank\"\r\n              >Find some examples</a\r\n            >\r\n          </div>\r\n          <q-form @submit=\"_OnUrl\" class=\"q-gutter-md\" style=\"width: 400px;\">\r\n            <q-input filled v-model=\"inputUrl\" label=\"Input URL here\" bottom-slots>\r\n              <template v-slot:hint>\r\n                <span>Uses <a href=\"https://allorigins.win\">AllOrigins</a> CORS proxy</span>\r\n              </template>\r\n            </q-input>\r\n            <div>\r\n              <q-btn label=\"Submit\" type=\"submit\" color=\"primary\" v-close-popup />\r\n            </div>\r\n          </q-form>\r\n        </q-card-section>\r\n      </q-card>\r\n    </q-dialog>\r\n    <q-dialog v-model=\"showPreviousFiles\">\r\n      <q-card>\r\n        <q-card-section>\r\n          <q-list>\r\n            <q-item v-for=\"(file, index) in selectedFiles\" :key=\"index\">\r\n              <q-item-section>\r\n                <q-item-label>{{ file.name }}</q-item-label>\r\n              </q-item-section>\r\n              <q-item-section side>\r\n                <q-btn label=\"View\" @click=\"viewPreviousFile(file)\" />\r\n              </q-item-section>\r\n            </q-item>\r\n          </q-list>\r\n        </q-card-section>\r\n      </q-card>\r\n    </q-dialog>\r\n  </q-layout>\r\n</template>\r\n\r\n<script>\r\nimport ViewerPage from \"@/components/ViewerPage\";\r\nimport Connections from \"@/components/Connections\";\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  components: { ViewerPage },\r\n\r\n  data() {\r\n    return {\r\n      dxfUrl: null,\r\n      selectedFileName: '',\r\n      inputFile: null,\r\n      isLocalFile: false,\r\n      aboutDialog: false,\r\n      urlDialog: false,\r\n      inputUrl: null,\r\n      uploadedFileContent: null,\r\n      isUserPopupOpen: false,\r\n      isInfoPopupOpen: false,\r\n      selectedFiles: [], // Array to store information about previously selected files\r\n      showPreviousFiles: false, // Flag to control visibility of the dialog/modal\r\n      tableData:[],\r\n      savingData: false\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    goToHome() {\r\n        this.$router.push('/')\r\n      },\r\n    // goToPdf() {\r\n    //   this.$router.push('/pdf')\r\n    // },\r\n\r\n\r\n    async _OnFileSelected(file) {\r\n      if (!file) {\r\n        console.log(\"No file selected\");\r\n        this._OnFileCleared();\r\n        return;\r\n      }\r\n      console.log(\"from parent\");\r\n      console.log(\"Selected file:\", file.name);\r\n      this.selectedFileName = file.name;\r\n\r\n      if (this.dxfUrl && this.isLocalFile) {\r\n        URL.revokeObjectURL(this.dxfUrl);\r\n      }\r\n      this.isLocalFile = true;\r\n      this.inputFile = file;\r\n      \r\n      // //FILENAME \r\n      // console.log(\"test\");\r\n      // console.log(this.inputFile.name);\r\n      this.dxfUrl = URL.createObjectURL(file);\r\n\r\n      // Add information about the selected file to the list of previous files\r\n      this.selectedFiles.push({\r\n        name: file.name,\r\n        url: this.dxfUrl,\r\n      });\r\n\r\n      this.loadingTable = true;\r\n\r\n      // Load table data asynchronously\r\n      await this.loadTableData();\r\n\r\n      // Hide loading indicator\r\n      this.loadingTable = false;\r\n    },\r\n\r\n    //Saving to backend end point \r\n    async handleSubmitData(dataToSubmit) {\r\n      // console.log(\"I am called dsfds\");\r\n      console.log(\"I am called dsfds\", dataToSubmit.uploadedFileContent);\r\n      let sampleData = dataToSubmit.uploadedFileContent.map(item =>  ({ ...item,\r\n        \"inspection_report_number\": dataToSubmit.inspection_report_number,\r\n         \"project_number\": dataToSubmit.project_number, \r\n        \"project_name\": dataToSubmit.project_name,\r\n        \"group\": dataToSubmit.group,\r\n        \"part_number\": dataToSubmit.part_number,\r\n        \"part_name\": dataToSubmit.part_name,\r\n        \"dxf_filename\": this.selectedFileName\r\n      }));\r\n\r\n      console.log(\"actual data\", sampleData);\r\n      if (this.savingData) {\r\n            return; // Exit the function if data is already being saved\r\n          }\r\n      try {\r\n        this.savingData = true;\r\n        console.log(\"table\",this.tableData);\r\n        console.log(typeof(this.tableData));\r\n        // Prepare the data to send based on the tableData\r\n    //     const dataToSend = this.tableData.map(item => ({\r\n    //       sl_no: item.sl_no,\r\n    //       handle: item.handle,\r\n    //       actual_measurement: item.actual_measurement,\r\n    //       upper_tolerance: item.upper_tolerance,\r\n    //       lower_tolerance: item.lower_tolerance,\r\n    //       measured_value: item.measured_value,\r\n    //       dxf_filename: this.selectedFileName,\r\n    //       inspection_report_number: item.inspection_report_number || '', // Assign empty string if undefined\r\n    // project_number: item.project_number || '', // Assign empty string if undefined\r\n    // project_name: item.project_name || '', // Assign empty string if undefined\r\n    // group: item.group || '', // Assign empty string if undefined\r\n    // part_number: item.part_number || '', // Assign empty string if undefined\r\n    // part_name: item.part_name || '' // Assign empty string if undefined\r\n  \r\n    //     }));\r\n        console.log(\"APP DATA TO SEND ALL\", sampleData);\r\n        // Send the data to the backend endpoint using Axios\r\n        const response = await axios.post('http://172.18.100.240:9999/save-data/', sampleData);\r\n        console.log(\"RESPONSE : \", response)\r\n        console.log('Data sent successfully');\r\n\r\n    // Check response status\r\n    if (response.status === 200) {\r\n      // Log success message\r\n      console.log('Data sent successfully');\r\n      console.log('Response from server:', response.data);\r\n      // Show success message to the user\r\n      this.$q.notify({\r\n        type: 'positive',\r\n        message: 'Data saved successfully'\r\n      });\r\n    } else {\r\n      // Show failure message to the user\r\n      this.$q.notify({\r\n        type: 'negative',\r\n        message: 'Failed to save data. Please try again.'\r\n      });\r\n    }\r\n    } catch (error) {\r\n    // Log error message if the request fails\r\n    console.error('Error sending data to server:', error);\r\n    // Show failure message to the user\r\n    this.$q.notify({\r\n      type: 'negative',\r\n      message: 'Error occurred while saving data. Please try again.'\r\n    });\r\n    } finally {\r\n    // Reset the savingData flag after the save operation is completed or failed\r\n    this.savingData = false;\r\n    }\r\n  },\r\n\r\n  onSubmitDataTable(data){\r\n    // console.log(\"newwww\" ,data);\r\n    this.tableData = data;\r\n    console.log(\"tesssst\");\r\n    console.log(\"outerrrr set data\", data);\r\n\r\n  },\r\n    async loadTableData() {\r\n      // Your code to process the DXF file and generate table data\r\n      // This code should be optimized for performance\r\n\r\n      // For example:\r\n      // Simulate loading delay\r\n      await new Promise((resolve) => setTimeout(resolve, 2000));\r\n\r\n      // Generate table data\r\n      this.tableData = this.generateTableData();\r\n    },\r\n\r\n    _OnFileCleared() {\r\n      if (this.inputFile) {\r\n        this.inputFile = null;\r\n        URL.revokeObjectURL(this.dxfUrl);\r\n        this.dxfUrl = null;\r\n        this.$q.notify({\r\n          type: \"info\",\r\n          message: \"File cleared\",\r\n        });\r\n      }\r\n    },\r\n\r\n    _OnUrl() {\r\n      if (this.inputUrl === null) {\r\n        return;\r\n      }\r\n      const url = this.inputUrl.trim();\r\n      if (url === \"\") {\r\n        return;\r\n      }\r\n      if (this.dxfUrl && this.isLocalFile) {\r\n        URL.revokeObjectURL(this.dxfUrl);\r\n      }\r\n      this.isLocalFile = false;\r\n      this.inputFile = new File([\"remote_file\"], url, { type: \"text/plain\" });\r\n      this.dxfUrl = \"https://api.allorigins.win/raw?url=\" + encodeURIComponent(url);\r\n    },\r\n    handleDxfFileLoaded(data) {\r\n  // Update uploadedFileContent when the DXF file is loaded\r\n  this.uploadedFileContent = data;\r\n\r\n  // Pass the loaded DXF file content to the ViewerPage component for rendering\r\n  this.$refs.viewerPage.renderDxfFile(data); // Assuming a method called renderDxfFile exists in the ViewerPage component\r\n},\r\n    openUserPopup() {\r\n      this.isUserPopupOpen = true;\r\n    },\r\n    closeUserPopup() {\r\n      this.isUserPopupOpen = false;\r\n    },\r\n    openInfoPopup() {\r\n      this.isInfoPopupOpen = true;\r\n    },\r\n    closeInfoPopup() {\r\n      this.isInfoPopupOpen = false;\r\n    },\r\n    openPreviousFiles() {\r\n  // Use Axios to fetch filenames from the backend endpoint\r\n  axios.get('http://172.18.100.240:9999/dxf_files/')\r\n      .then(response => {\r\n        console.log(\"PREEEEEEEEEEEEEEEEEEEEEE\")\r\n            console.log(response.data.files)\r\n            this.selectedFiles = response.data.files.map(file => ({\r\n                  name: file,\r\n                  \r\n              }));\r\n\r\n              // Toggle the flag to show the dialog/modal\r\n              this.showPreviousFiles = true;\r\n\r\n              console.log(\"dnmfvvvvvv\")\r\n              console.log(this.selectedFiles);\r\n\r\n      })\r\n      .catch(error => {\r\n          // Handle errors if the request fails\r\n          console.error('Error fetching filenames:', error);\r\n          // Display an error message to the user\r\n          this.$q.notify({\r\n              type: 'negative',\r\n              message: 'Failed to fetch filenames. Please try again.'\r\n          });\r\n      });\r\n},\r\n\r\nclearDxfUrl() {\r\n  // Clear dxfUrl when closing the dialog/modal\r\n  this.dxfUrl = null;\r\n},\r\n\r\nviewPreviousFile(file) {\r\n  // Set the dxfUrl to the selected file's URL\r\n  this.dxfUrl = file.url;\r\n\r\n  // Save the selected file to browser storage\r\n  this.saveToFileStorage(file);\r\n\r\n  // Optionally, you may want to close the dialog/modal after selecting the file\r\n  this.showPreviousFiles = false;\r\n\r\n  // Fetch the file content using the URL\r\n  fetch(this.dxfUrl)\r\n.then(response => {\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch');\r\n  }\r\n  return response.blob();\r\n})\r\n.then(blob => {\r\n  // Handle the fetched blob data\r\n  console.log('Fetched blob data:', blob);\r\n  this.$refs.viewerPage.renderDxfFile(blob); // Assuming a method called renderDxfFile exists in the ViewerPage component\r\n})\r\n.catch(error => {\r\n  // Handle fetch errors\r\n  console.error('Fetch error:', error.message);\r\n  // Display an error message to the user\r\n  this.$q.notify({\r\n    type: 'negative',\r\n    message: 'Error occurred: ' + error.message\r\n  });\r\n});\r\n\r\n},\r\n\r\nsaveToFileStorage(file) {\r\n// Retrieve previously saved files from storage\r\nconst storedFiles = JSON.parse(localStorage.getItem('selectedFiles')) || [];\r\n\r\n// Check if the file name already exists in the list of selected files\r\nconst isFileExists = storedFiles.some(savedFile => savedFile.name === file.name);\r\n\r\n// If the file name does not exist, add the selected file to the list of stored files\r\nif (!isFileExists) {\r\n  storedFiles.push(file);\r\n}\r\n\r\n// Save the updated list of files to storage\r\nlocalStorage.setItem('selectedFiles', JSON.stringify(storedFiles));\r\n},\r\n\r\n\r\nloadFromStorage() {\r\n  // Retrieve previously saved files from storage\r\n  const storedFiles = JSON.parse(localStorage.getItem('selectedFiles')) || [];\r\n  // Set the selectedFiles array to the stored files\r\n  this.selectedFiles = storedFiles;\r\n},\r\n\r\n  },\r\n\r\n  created() {\r\n    const aboutBlock = document.getElementById(\"about\");\r\n    this.aboutHtml = aboutBlock.innerHTML;\r\n    aboutBlock.style.display = \"none\";\r\n    /* For web crawler. */\r\n    document.getElementById(\"noscript\").innerText = aboutBlock.innerText;\r\n    this.loadFromStorage();\r\n  },\r\n  destroyed() {\r\n    if (this.dxfUrl) {\r\n      URL.revokeObjectURL(this.dxfUrl);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.navbarContent {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.leftNav {\r\n  display: flex;\r\n}\r\n.logoname {\r\n  font-family: \"CustomFont2\", Arial, sans-serif;\r\n  // margin-left: 30px;\r\n  font-size: 40px;\r\n}\r\n.fileCenter {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\na.github:hover {\r\n  text-decoration: none;\r\n}\r\n.selectfile {\r\n  font-family: \"CustomFont\", Arial, sans-serif;\r\n  align-items: center;\r\n  justify-items: center;\r\n  margin-top: 14px;\r\n  width: 270px;\r\n}\r\n.centralUploader {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  z-index: 10;\r\n  font-family: \"CustomFont\", Arial, sans-serif;\r\n}\r\n.prevent-scrolling {\r\n  overflow: hidden;\r\n}\r\n.user-popup {\r\n  position: absolute;\r\n  top: 100px; /* Adjust the top position as needed */\r\n  right: 20px; /* Adjust the right position as needed */\r\n  width: 200px; /* Set the width of the popup */\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000; /* Ensure the popup appears above other elements */\r\n}\r\n.user-info {\r\n  padding: 10px;\r\n}\r\n.user-details {\r\n  margin-bottom: 10px;\r\n}\r\n.username {\r\n  font-weight: bold;\r\n}\r\n.user-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.cancel-button,\r\n.logout-button {\r\n  padding: 5px 10px;\r\n  background-color: #ccc;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n.cancel-button:hover,\r\n.logout-button:hover {\r\n  background-color: #bbb;\r\n}\r\n.home-btn {\r\n    background-color: #6c757d;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    border-radius: 0.25rem;\r\n    cursor: pointer;\r\n    margin-left: 100px;\r\n  }\r\n\r\n  .info-popup {\r\n  position: absolute;\r\n  top: 100px; /* Adjust the top position as needed */\r\n  right: -20px; /* Adjust the right position as needed */\r\n  width: 200px; /* Set the width of the popup */\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000; /* Ensure the popup appears above other elements */\r\n}\r\n.info-info {\r\n  padding: 10px;\r\n}\r\n.info-details {\r\n  margin-bottom: 10px;\r\n}\r\n.info {\r\n  font-weight: bold;\r\n}\r\n.info-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n// .cancel-button,\r\n// .logout-button {\r\n//   padding: 5px 10px;\r\n//   background-color: #ccc;\r\n//   border: none;\r\n//   border-radius: 3px;\r\n//   cursor: pointer;\r\n// }\r\n// .cancel-button:hover,\r\n// .logout-button:hover {\r\n//   background-color: #bbb;\r\n// }\r\n</style>\r\n"]}]}