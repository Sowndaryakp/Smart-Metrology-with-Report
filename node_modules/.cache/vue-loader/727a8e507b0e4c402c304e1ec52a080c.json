{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\src\\components\\DataTable.vue?vue&type=style&index=0&id=1bcc6778&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\src\\components\\DataTable.vue","mtime":1711610624000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAZm9udC1mYWNlIHsNCiAgICBmb250LWZhbWlseTogJ0N1c3RvbUZvbnQnOyAvKiBTcGVjaWZ5IHRoZSBuYW1lIG9mIHlvdXIgZm9udCAqLw0KICAgIHNyYzogdXJsKCcuLi9hc3NldHMvZm9udHMvTW9udHNlcnJhdC1TZW1pQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7IC8qIEFkanVzdCB0aGUgcGF0aCB0byB5b3VyIGZvbnQgZmlsZSAqLw0KICAgIC8qIFlvdSBjYW4gaW5jbHVkZSBhZGRpdGlvbmFsIGZvbnQgdmFyaWF0aW9ucyAoZS5nLiwgYm9sZCwgaXRhbGljKSBpZiBhdmFpbGFibGUgKi8NCn0NCkBmb250LWZhY2Ugew0KICAgIGZvbnQtZmFtaWx5OiAnQ3VzdG9tRm9udDInOyAvKiBTcGVjaWZ5IHRoZSBuYW1lIG9mIHlvdXIgZm9udCAqLw0KICAgIHNyYzogdXJsKCcuLi9hc3NldHMvZm9udHMvRGVzaWduZXIub3RmJykgZm9ybWF0KCdvcGVudHlwZScpOyAvKiBBZGp1c3QgdGhlIHBhdGggdG8geW91ciBmb250IGZpbGUgKi8NCiAgICAvKiBZb3UgY2FuIGluY2x1ZGUgYWRkaXRpb25hbCBmb250IHZhcmlhdGlvbnMgKGUuZy4sIGJvbGQsIGl0YWxpYykgaWYgYXZhaWxhYmxlICovDQp9DQpAZm9udC1mYWNlIHsNCiAgICBmb250LWZhbWlseTogJ0N1c3RvbUZvbnQzJzsgLyogU3BlY2lmeSB0aGUgbmFtZSBvZiB5b3VyIGZvbnQgKi8NCiAgICBzcmM6IHVybCgnLi4vYXNzZXRzL2ZvbnRzL1N0cmV0Y2hQcm8ub3RmJykgZm9ybWF0KCdvcGVudHlwZScpOyAvKiBBZGp1c3QgdGhlIHBhdGggdG8geW91ciBmb250IGZpbGUgKi8NCiAgICAvKiBZb3UgY2FuIGluY2x1ZGUgYWRkaXRpb25hbCBmb250IHZhcmlhdGlvbnMgKGUuZy4sIGJvbGQsIGl0YWxpYykgaWYgYXZhaWxhYmxlICovDQp9DQouZGF0YS10YWJsZSB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgbWF4LXdpZHRoOiA4MDBweDsNCiAgbWF4LWhlaWdodDogNzEwcHg7DQogIG92ZXJmbG93OiBhdXRvOw0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICBwYWRkaW5nOiAxMHB4Ow0KICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTsNCiAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICBmb250LWZhbWlseTogJ0N1c3RvbUZvbnQnLCBBcmlhbCwgc2Fucy1zZXJpZjsNCn0NCg0KLmRpbWVuc2lvbi10YWJsZSB7DQogIHdpZHRoOiAxMDAlOw0KICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOw0KfQ0KDQouZGltZW5zaW9uLXRhYmxlIHRoLA0KLmRpbWVuc2lvbi10YWJsZSB0ZCB7DQogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQogIHBhZGRpbmc6IDhweDsNCn0NCg0KLmRpbWVuc2lvbi10YWJsZSB0aCB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7DQp9DQoNCi5kaW1lbnNpb24tdGFibGUgdHIuc2VsZWN0ZWQtcm93IHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDkyLCAxNjAsIDE5Mik7DQp9DQoNCi5zZXQtYnV0dG9uIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzI1ZDEzYzsNCiAgY29sb3I6IHdoaXRlOw0KICBwYWRkaW5nOiA4cHggMTZweDsNCiAgbWFyZ2luLXRvcDogMTBweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICBib3JkZXI6IG5vbmU7DQogIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgd2lkdGg6IDE0MHB4Ow0KICBoZWlnaHQ6IDUwcHg7DQp9DQoNCi5zZXQtYnV0dG9uOmhvdmVyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzY3YWFlZTsNCn0NCg0KLmRpbWVuc2lvbi10YWJsZSB7DQogIHdpZHRoOiAxMDAlOw0KICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOw0KICB0YWJsZS1sYXlvdXQ6IGZpeGVkOyAvKiBBZGQgdGhpcyBsaW5lIHRvIGVuc3VyZSBmaXhlZCB0YWJsZSBsYXlvdXQgKi8NCn0NCg0KLmRpbWVuc2lvbi10YWJsZSB0aCwNCi5kaW1lbnNpb24tdGFibGUgdGQgew0KICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOw0KICBwYWRkaW5nOiA5cHg7DQogIG92ZXJmbG93OiBoaWRkZW47IC8qIEFkZCB0aGlzIGxpbmUgdG8gcHJldmVudCBjb250ZW50IG92ZXJmbG93ICovDQp9DQoNCi5lZGl0LWJ1dHRvbiB7DQogIGJhY2tncm91bmQtY29sb3I6ICMwNmNjZmQ7IC8qIEdyZWVuICovDQogIGNvbG9yOiB3aGl0ZTsNCiAgYm9yZGVyOiBub25lOw0KICBwYWRkaW5nOiA4cHggMTZweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgZm9udC1zaXplOiAxNHB4Ow0KICBtYXJnaW46IDRweCAycHg7DQogIHRyYW5zaXRpb24tZHVyYXRpb246IDAuNHM7DQogIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmVkaXQtYnV0dG9uOmhvdmVyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1OTJhMDsgLyogRGFya2VyIEdyZWVuICovDQp9DQoNCi5zYXZlLWJ1dHRvbiB7DQogIGJhY2tncm91bmQtY29sb3I6ICMwNmJhMDA7IC8qIEJsdWUgKi8NCiAgY29sb3I6IHdoaXRlOw0KICBib3JkZXI6IG5vbmU7DQogIHBhZGRpbmc6IDhweCAxNnB4Ow0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBmb250LXNpemU6IDE0cHg7DQogIG1hcmdpbjogNHB4IDJweDsNCiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC40czsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouc2F2ZS1idXR0b246aG92ZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3N0EzOyAvKiBEYXJrZXIgQmx1ZSAqLw0KfQ0KDQouaGVhZGVyew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjODVkNmYzOw0KfQ0KDQojaW5zcGVjdGlvbi1yZXBvcnQgew0KICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQp0YWJsZSwgdGgsIHRkIHsNCiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7DQogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7DQogIHBhZGRpbmc6IDVweDsNCn0NCg0KdGggew0KICB0ZXh0LWFsaWduOiBsZWZ0Ow0KfQ0KDQojY21tLXJlcG9ydCB7DQogIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsNCiAgd2lkdGg6IDEwMCU7DQp9DQoNCi5yZXBvcnQtaGVhZGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBtYXJnaW4tdG9wOiAtMzBweDsNCiAgbWFyZ2luLWJvdHRvbTogLTYwcHg7DQp9DQoNCg0KLnJlcG9ydC1ib2R5IHsNCiAgZGlzcGxheTogZmxleDsNCiAgbWFyZ2luOiAxOHB4IDJweCA7DQp9DQoNCg0KLypnaXZpbmcgc3BhY2UgYmV0d2VlbiB0aGUgbGVmdCBhbmQgcmlnaHQNCi8qIC5yZXBvcnQtc2VjdGlvbiB7DQogIGZsZXg6IDE7DQogIG1hcmdpbi1yaWdodDogMjBweDsgDQp9ICovDQoNCi5yZXBvcnQtc2VjdGlvbjpsYXN0LWNoaWxkIHsNCiAgbWFyZ2luLXJpZ2h0OiAwOyAvKiBSZW1vdmUgbWFyZ2luIGZyb20gdGhlIGxhc3Qgc2VjdGlvbiB0byBwcmV2ZW50IGV4dHJhIHNwYWNlICovDQp9DQoNCi5yZXBvcnQtc2VjdGlvbiB0YWJsZSB7DQogIHdpZHRoOiAxMDAlOyAvKiBFbnN1cmUgdGhlIHRhYmxlIGZpbGxzIHRoZSBhdmFpbGFibGUgc3BhY2UgKi8NCn0NCg0KLnJlcG9ydC1zZWN0aW9uIHRoIHsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCn0NCg0KLnJlcG9ydC1zZWN0aW9uIGlucHV0IHsNCiAgd2lkdGg6IGNhbGMoMTAwJSAtIDZweCk7IC8qIEFkanVzdCBpbnB1dCB3aWR0aCBjb25zaWRlcmluZyBwYWRkaW5nIGFuZCBib3JkZXJzICovDQogIHBhZGRpbmc6IDZweDsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCn0NCi5yZXBvcnQtYm9keSB0cjpudGgtY2hpbGQob2RkKSB7DQogIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7DQp9DQo="},{"version":3,"sources":["DataTable.vue"],"names":[],"mappings":";AAqfile":"DataTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"data-table\">\r\n    <div class=\"report-header\">\r\n      <p>{{ currentDate }}</p>\r\n      <h4>REPORT</h4>\r\n      <img src=\"@/assets/images/cmti.png\" alt=\"Logo\" class=\"Logo\" height=\"70\" width=\"120\" />\r\n    </div>\r\n    <div class=\"report-body\">\r\n  <div class=\"report-section\">\r\n    <table class=\"table-data\">\r\n      <tr>\r\n        <th class=\"table-data1\">INSPECTION REPORT</th>\r\n        <td><input type=\"text\" v-model=\"inspection_report_number\" placeholder=\"Enter inspection report\"></td>\r\n      </tr>\r\n      <tr>\r\n        <th>PROJECT NUMBER</th>\r\n        <td><input type=\"text\" v-model=\"project_number\" placeholder=\"Enter project number\"></td>\r\n      </tr>\r\n      <tr>\r\n        <th>PART NUMBER</th>\r\n        <td><input type=\"text\" v-model=\"part_number\" placeholder=\"Enter part numer\"></td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"report-section\">\r\n    <table>\r\n      <tr>\r\n        <th>GROUP</th>\r\n        <td><input type=\"text\" v-model=\"group\" placeholder=\"Enter group\"></td>\r\n      </tr>\r\n      <tr>\r\n        <th>PROJECT NAME</th>\r\n        <td><input type=\"text\" v-model=\"project_name\" placeholder=\"Enter project name\"></td>\r\n      </tr>\r\n      <tr>\r\n        <th>PART NAME</th>\r\n        <td><input type=\"text\" v-model=\"part_name\" placeholder=\"Enter part name\"></td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n    <div v-if=\"uploadedFileContent && uploadedFileContent.length > 0\">\r\n      <table class=\"dimension-table\">\r\n        <thead>\r\n          <tr class=\"header\">\r\n            <th>Sl No</th>\r\n            <!-- <th>Handle</th> -->\r\n            <th>Actual Measurement</th>\r\n            <th>Upper Tolerance</th>\r\n            <th>Lower Tolerance</th>\r\n            <th>Measured Value</th>\r\n            <th>Status</th>\r\n            <th>Actions</th> \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(dim, index) in uploadedFileContent\" :key=\"index\" :class=\"{ 'selected-row': dim.handle === selectedHandle }\" @click=\"handleRowClick(dim.handle)\" @dblclick=\"editRow(index)\" ref=\"tableRows\">\r\n            <td>\r\n              <span v-if=\"!dim.editing\">{{ dim.sl_no }}</span>\r\n              <input v-else v-model=\"dim.sl_no\" type=\"text\">\r\n            </td>\r\n            <!-- <td>\r\n              <span v-if=\"!dim.editing\">{{   }}</span>\r\n              <input v-else v-model=\"dim.handle\" type=\"text\">\r\n            </td> -->\r\n            <td>\r\n              <span v-if=\"!dim.editing\">{{ dim.actual_measurement }}</span>\r\n              <input v-else v-model=\"dim.actual_measurement\" type=\"text\">\r\n            </td>\r\n            <td>\r\n              <span v-if=\"!dim.editing\">{{ dim.upper_tolerance }}</span>\r\n              <input v-else v-model=\"dim.upper_tolerance\" type=\"text\">\r\n            </td>\r\n            <td>\r\n              <span v-if=\"!dim.editing\">{{ dim.lower_tolerance }}</span>\r\n              <input v-else v-model=\"dim.lower_tolerance\" type=\"text\">\r\n            </td>\r\n            <td>\r\n              <span v-if=\"!dim.editing\">{{ dim.measured_value }}</span>\r\n              <input v-else v-model=\"dim.measured_value\" type=\"text\">\r\n            </td>\r\n            <td>\r\n              <span v-if=\"!dim.editing\">{{ dim.status }}</span> <!-- Display status when not editing -->\r\n              <input v-else v-model=\"dim.status\" type=\"text\"> <!-- Input field for editing status -->\r\n            </td>\r\n            <td>\r\n              <button v-if=\"!dim.editing\" @click=\"editRow(index)\" class=\"edit-button\">Edit</button>\r\n              <button v-else @click=\"saveEditedRow(index)\" class=\"save-button\">Save</button>\r\n            </td>\r\n\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button @click=\"onSubmitData\" class=\"set-button\">\r\n        <img class=\"set-img\" width=\"28\" height=\"24\" src=\"https://img.icons8.com/sf-black-filled/64/FFFFFF/save.png\" alt=\"save\"/>\r\n        Save Data\r\n      </button>\r\n    </div>\r\n    <div class=\"spacer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'DataTable',\r\n  props: {\r\n    uploadedFileContent: Array,\r\n    fileName: String,\r\n    inspection_report_number: String, // New props\r\n    project_number: String, // New props\r\n    project_name: String, // New props\r\n    group: String, // New props\r\n    part_number: String, // New props\r\n    part_name: String, // New props\r\n    selectedFileName: String,\r\n    uploadedFileContentnew:String\r\n  },\r\n  data() {\r\n    return {\r\n      selectedHandle: null,\r\n      websocket: null, // Store the WebSocket connection,\r\n      inspection_report_number: String, // New props\r\n      project_number: String, // New props\r\n      project_name: String, // New props\r\n      group: String, // New props\r\n      part_number: String, // New props\r\n      part_name: String, // New props\r\n      currentDate: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchDeviceDetails() {\r\n      try {\r\n        const response = await fetch(\"http://172.18.100.240:9999/devices\");\r\n        const data = await response.json();\r\n\r\n        if (data && data.devices && data.devices.length > 0) {\r\n          const firstDevice = data.devices[0];\r\n          this.inspection_report_number = firstDevice.inspection_report_number || '';\r\n          this.project_number = firstDevice.project_number || '';\r\n          // Assign values to other data properties for PROJECT NAME, GROUP, PART NUMBER, PART NAME\r\n        } else {\r\n          console.log(\"No devices received from the server.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Error fetching device details: \", error);\r\n      }\r\n    },\r\n    handleRowClick(handle) {\r\n      this.selectedHandle = handle;\r\n      this.$emit(\"handle-click\", handle);\r\n      this.$emit(\"handle-click-dxf\", handle); // Emit a custom event for the DXF diagram\r\n    },\r\n\r\n    editRow(index) {\r\n      this.$set(this.uploadedFileContent[index], 'editing', true);\r\n    },\r\n\r\n    saveEditedRow(index) {\r\n      this.$set(this.uploadedFileContent[index], 'editing', false);\r\n    },\r\n\r\n    onSubmitData() {\r\n      const dataToSubmit = {\r\n        inspection_report_number: this.inspection_report_number,\r\n        project_number: this.project_number,\r\n        project_name: this.project_name,\r\n        group: this.group,\r\n        part_number: this.part_number,\r\n        part_name: this.part_name,\r\n        uploadedFileContent: this.uploadedFileContent\r\n      };\r\n      this.$emit('submit-data', dataToSubmit);\r\n      console.log(\"DataTable ALL data Comming \", dataToSubmit);\r\n      // Filter out only the selected rows and emit their data\r\n      const uploadedFileContent = this.uploadedFileContent.filter(row => row.measured_value !== null);\r\n      // Set measured value to null for the remaining rows\r\n      this.uploadedFileContent.forEach(row => {\r\n        if (row.measured_value === undefined) {\r\n          row.measured_value = 0;\r\n        }\r\n      });\r\n      // Emit event with the data of selected rows\r\n      this.$emit('set-data', dataToSubmit);\r\n      this.$emit('save-request');\r\n      console.log(\"DataTable set data:\", uploadedFileContent);\r\n      console.log(\"SETTING THE DATA\");\r\n    },\r\n    updateMeasuredValue(data) {\r\n      const handleValuePair = data.split(',').map(item => item.trim());\r\n      const handle = handleValuePair.find(pair => pair.startsWith('Handle')).split(':')[1].trim();\r\n      const measuredValue = handleValuePair.find(pair => pair.startsWith('measured_value')).split(':')[1].trim();\r\n      // Find the index of the selected row\r\n      const selectedIndex = this.uploadedFileContent.findIndex(row => row.handle === handle);\r\n      if (selectedIndex !== -1) {\r\n        // Update the measured_value in the uploadedFileContent\r\n        this.uploadedFileContent[selectedIndex].measured_value = measuredValue;\r\n        // Use the ref to update the corresponding row in the table\r\n        const selectedRow = this.$refs.tableRows[selectedIndex];\r\n        if (selectedRow) {\r\n          selectedRow.cells[4].textContent = measuredValue; // Assuming measured_value is the 5th column\r\n        }\r\n      }\r\n    },\r\n    handleDxfFileLoaded(data) {\r\n      // Update uploadedFileContent when the DXF file is loaded\r\n      this.uploadedFileContent = data;\r\n    },\r\n    initializeWebSocket(handle) {\r\n      if (this.websocket) {\r\n        this.websocket.close();\r\n      }\r\n      // WebSocket connection to send the selected handle to the backend\r\n      this.websocket = new WebSocket(`ws://172.18.100.240:9999/ws/${handle}`);\r\n      // Handle WebSocket events\r\n      this.websocket.onopen = () => {\r\n        console.log(\"WebSocket connection opened\");\r\n      };\r\n      this.websocket.onclose = () => {\r\n        console.log(\"WebSocket connection closed\");\r\n      };\r\n      this.websocket.onerror = (error) => {\r\n        console.error(\"WebSocket error:\", error);\r\n      };\r\n      this.websocket.onmessage = (event) => {\r\n        // Update the measured value when new data is received\r\n        this.updateMeasuredValue(event.data);\r\n      };\r\n    },\r\n    updateCurrentDate() {\r\n      const now = new Date();\r\n      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true };\r\n      this.currentDate = now.toLocaleDateString('en-US', options); // Format date and time\r\n    },\r\n    async fetchData() {\r\n      console.log(\"filenameeeeeeeeeee\")\r\n  console.log(this.uploadedFileContentnew)\r\n      try {\r\n        console.log(\"filenameeeukjhkjkjeeeeeeee\")\r\n  console.log(this.uploadedFileContentnew)\r\n        const response = await axios.get(`http://172.18.100.240:9999/get-data/${this.uploadedFileContentnew}`);\r\n        const data = response.data[0]; // Assuming the response contains only one object\r\n        // Update data properties with fetched values\r\n        this.inspection_report_number = data.inspection_report_number;\r\n        this.project_number = data.project_number;\r\n        this.project_name = data.project_name;\r\n        this.group = data.group;\r\n        this.part_number = data.part_number;\r\n        this.part_name = data.part_name;\r\nconsole.log(\"file :----------\", this.uploadedFileContentnew)\r\n        // Log the values in the console\r\n    console.log('Inspection Report Number:', this.inspection_report_number);\r\n    console.log('Project Number:', this.project_number);\r\n    console.log('Project Name:', this.project_name);\r\n    console.log('Group:', this.group);\r\n    console.log('Part Number:', this.part_number);\r\n    console.log('Part Name:', this.part_name);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    selectedHandle(newHandle) {\r\n      if (newHandle) {\r\n        this.initializeWebSocket(newHandle);\r\n      }\r\n    },\r\n    selectedFileName(newFileName) {\r\n      if (newFileName) {\r\n        this.fetchData();\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n     this.fetchData();\r\n     // Initialize uploadedFileContent with empty \"status\" property for each item\r\n      this.uploadedFileContent = this.uploadedFileContent.map(item => ({\r\n       ...item,\r\n       status: \"\" // Add status parameter with an empty value\r\n     }));\r\n    this.updateCurrentDate();\r\n    // Refresh current date every second\r\n    setInterval(this.updateCurrentDate, 1000);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@font-face {\r\n    font-family: 'CustomFont'; /* Specify the name of your font */\r\n    src: url('../assets/fonts/Montserrat-SemiBold.ttf') format('truetype'); /* Adjust the path to your font file */\r\n    /* You can include additional font variations (e.g., bold, italic) if available */\r\n}\r\n@font-face {\r\n    font-family: 'CustomFont2'; /* Specify the name of your font */\r\n    src: url('../assets/fonts/Designer.otf') format('opentype'); /* Adjust the path to your font file */\r\n    /* You can include additional font variations (e.g., bold, italic) if available */\r\n}\r\n@font-face {\r\n    font-family: 'CustomFont3'; /* Specify the name of your font */\r\n    src: url('../assets/fonts/StretchPro.otf') format('opentype'); /* Adjust the path to your font file */\r\n    /* You can include additional font variations (e.g., bold, italic) if available */\r\n}\r\n.data-table {\r\n  position: relative;\r\n  max-width: 800px;\r\n  max-height: 710px;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  font-family: 'CustomFont', Arial, sans-serif;\r\n}\r\n\r\n.dimension-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.dimension-table th,\r\n.dimension-table td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n}\r\n\r\n.dimension-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.dimension-table tr.selected-row {\r\n  background-color: rgb(92, 160, 192);\r\n}\r\n\r\n.set-button {\r\n  background-color: #25d13c;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 5px;\r\n  width: 140px;\r\n  height: 50px;\r\n}\r\n\r\n.set-button:hover {\r\n  background-color: #67aaee;\r\n}\r\n\r\n.dimension-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  table-layout: fixed; /* Add this line to ensure fixed table layout */\r\n}\r\n\r\n.dimension-table th,\r\n.dimension-table td {\r\n  border: 1px solid #ccc;\r\n  padding: 9px;\r\n  overflow: hidden; /* Add this line to prevent content overflow */\r\n}\r\n\r\n.edit-button {\r\n  background-color: #06ccfd; /* Green */\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  margin: 4px 2px;\r\n  transition-duration: 0.4s;\r\n  cursor: pointer;\r\n}\r\n\r\n.edit-button:hover {\r\n  background-color: #4592a0; /* Darker Green */\r\n}\r\n\r\n.save-button {\r\n  background-color: #06ba00; /* Blue */\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  margin: 4px 2px;\r\n  transition-duration: 0.4s;\r\n  cursor: pointer;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: #0077A3; /* Darker Blue */\r\n}\r\n\r\n.header{\r\n  background-color: #85d6f3;\r\n}\r\n\r\n#inspection-report {\r\n  font-family: Arial, sans-serif;\r\n  width: 100%;\r\n}\r\n\r\ntable, th, td {\r\n  border: 1px solid black;\r\n  border-collapse: collapse;\r\n  padding: 5px;\r\n}\r\n\r\nth {\r\n  text-align: left;\r\n}\r\n\r\n#cmm-report {\r\n  font-family: Arial, sans-serif;\r\n  width: 100%;\r\n}\r\n\r\n.report-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: -30px;\r\n  margin-bottom: -60px;\r\n}\r\n\r\n\r\n.report-body {\r\n  display: flex;\r\n  margin: 18px 2px ;\r\n}\r\n\r\n\r\n/*giving space between the left and right\r\n/* .report-section {\r\n  flex: 1;\r\n  margin-right: 20px; \r\n} */\r\n\r\n.report-section:last-child {\r\n  margin-right: 0; /* Remove margin from the last section to prevent extra space */\r\n}\r\n\r\n.report-section table {\r\n  width: 100%; /* Ensure the table fills the available space */\r\n}\r\n\r\n.report-section th {\r\n  text-align: left;\r\n}\r\n\r\n.report-section input {\r\n  width: calc(100% - 6px); /* Adjust input width considering padding and borders */\r\n  padding: 6px;\r\n  box-sizing: border-box;\r\n}\r\n.report-body tr:nth-child(odd) {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>\r\n"]}]}