{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\src\\PdfHome.vue?vue&type=style&index=0&id=40157888&scoped=true&lang=less&","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\src\\PdfHome.vue","mtime":1711533158000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\less-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLm5hdmJhckNvbnRlbnQgewogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgfQogIC5sZWZ0TmF2IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgfQogIC5sb2dvbmFtZSB7CiAgICBmb250LWZhbWlseTogIkN1c3RvbUZvbnQyIiwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgICBtYXJnaW4tbGVmdDogNTcwcHg7CiAgICBmb250LXNpemU6IDQwcHg7CiAgfQogIC5maWxlQ2VudGVyIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogIH0KICAuY2VudHJhbFVwbG9hZGVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgei1pbmRleDogMTA7CiAgICBmb250LWZhbWlseTogIkN1c3RvbUZvbnQiLCBBcmlhbCwgc2Fucy1zZXJpZjsKICB9CiAKICAudXNlci1wb3B1cCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDEwMHB4OyAvKiBBZGp1c3QgdGhlIHRvcCBwb3NpdGlvbiBhcyBuZWVkZWQgKi8KICAgIHJpZ2h0OiAyMHB4OyAvKiBBZGp1c3QgdGhlIHJpZ2h0IHBvc2l0aW9uIGFzIG5lZWRlZCAqLwogICAgd2lkdGg6IDIwMHB4OyAvKiBTZXQgdGhlIHdpZHRoIG9mIHRoZSBwb3B1cCAqLwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMik7CiAgICB6LWluZGV4OiAxMDAwOyAvKiBFbnN1cmUgdGhlIHBvcHVwIGFwcGVhcnMgYWJvdmUgb3RoZXIgZWxlbWVudHMgKi8KICB9CiAgLnVzZXItaW5mbyB7CiAgICBwYWRkaW5nOiAxMHB4OwogIH0KICAudXNlci1kZXRhaWxzIHsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgfQogIC51c2VybmFtZSB7CiAgICBmb250LXdlaWdodDogYm9sZDsKICB9CiAgLnVzZXItYWN0aW9ucyB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIH0KICAuY2FuY2VsLWJ1dHRvbiwKICAubG9nb3V0LWJ1dHRvbiB7CiAgICBwYWRkaW5nOiA1cHggMTBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiAzcHg7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQogIC5jYW5jZWwtYnV0dG9uOmhvdmVyLAogIC5sb2dvdXQtYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNiYmI7CiAgfQogIC5wZGYtY29udGFpbmVyIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7CiAgfQogIAogIC5idXR0b24tY29udGFpbmVyIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IC8qIERpc3RyaWJ1dGUgaXRlbXMgYWxvbmcgdGhlIG1haW4gYXhpcyAqLwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHdpZHRoOiAxMDAlOwogIH0KICAKICAuc2VsZWN0LXBkZi1idG4gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzM0OTBkYzsKICAgIGNvbG9yOiAjZmZmOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBwYWRkaW5nOiAwLjVyZW0gMXJlbTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQogIAogIC5ob21lLWJ0biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3NTdkOwogICAgY29sb3I6ICNmZmY7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIC8vIG1hcmdpbi1sZWZ0OiAxMTIwcHg7CiAgICBtYXJnaW4tbGVmdDogNTgwcHg7CiAgfQoKICAvKmFsaWduIGVuZCBhbmQgc3BhY2UqLwogIC8qIC5ob21lLWJ0biB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNzU3ZDsKICBjb2xvcjogI2ZmZjsKICBmb250LXdlaWdodDogYm9sZDsKICBwYWRkaW5nOiAwLjVyZW0gMXJlbTsKICBib3JkZXI6IG5vbmU7CiAgYm9yZGVyLXJhZGl1czogMC4yNXJlbTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgbWFyZ2luLXRvcDogMXJlbTsKICBhbGlnbi1zZWxmOiBmbGV4LWVuZDsKfSAqLwogIAogIC5wZGYtcHJldmlldyB7CiAgICBtYXJnaW4tdG9wOiAxcmVtOwogIH0KICAKICAucGRmLXByZXZpZXctaW5uZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICAgIHBhZGRpbmc6IDFyZW07CiAgICBib3JkZXItcmFkaXVzOiAwLjVyZW07CiAgICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpOwogICAgd2lkdGg6IDEwMDBweDsKICAgIGhlaWdodDogODAwcHg7IC8qIEluY3JlYXNlIGhlaWdodCBhcyBuZWVkZWQgKi8KICB9CiAgCiAgLnBkZi1lbWJlZCB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogMTAwJTsKICB9CiAg"},{"version":3,"sources":["PdfHome.vue"],"names":[],"mappings":";AAsfile":"PdfHome.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <q-layout view=\"hHh lpr fff\" data-nosnippet>\r\n      <q-header>\r\n        <q-card style=\"background-color: white; color: black; height: 80px; display: flex; justify-content: center; align-items: center;\">\r\n          <q-toolbar class=\"navbarContent\">\r\n            <div class=\"leftNav\">\r\n              <img src=\"./assets/images/cmti.png\" alt=\"Logo\" class=\"Logo\" height=\"70\" width=\"120\" />\r\n            </div>\r\n            <div class=\"fileCenter\">\r\n              <q-toolbar-title :shrink=\"true\" class=\"logoname\">SMART METROLOGY</q-toolbar-title>\r\n            </div>\r\n            <button @click=\"goToHome\" class=\"home-btn\">Home</button>\r\n            <div>\r\n            <div class=\"user-icon\" @click=\"openUserPopup\">\r\n              <img src=\"https://img.icons8.com/ios-glyphs/30/4D4D4D/user--v1.png\" alt=\"User Icon\" />\r\n            </div>\r\n          </div>\r\n          </q-toolbar>\r\n        </q-card>\r\n      </q-header>\r\n      <q-page-container classname=\"\">\r\n        <PdfViewerPage >\r\n            \r\n      <div v-if=\"inputFile === null\" class=\"centralUploader row justify-center items-center\">\r\n        <div v-if=\"pdfUrl\" class=\"pdf-preview\">\r\n        <div class=\"pdf-preview-inner\">\r\n          <embed :src=\"pdfUrl\" type=\"application/pdf\" class=\"pdf-embed\">\r\n        </div>\r\n      </div>\r\n        </div>\r\n        </PdfViewerPage>\r\n      </q-page-container>\r\n  \r\n      <div class=\"user-popup\" v-if=\"isUserPopupOpen\">\r\n        <div class=\"user-info\">\r\n          <div class=\"user-details\">\r\n            <div class=\"username\">CMTI</div>\r\n            <div class=\"email\">cmti@gmail.com</div>\r\n          </div>\r\n          <div class=\"user-actions\">\r\n            <button class=\"cancel-button\" @click=\"closeUserPopup\">Cancel</button>\r\n            <button class=\"logout-button\">Logout</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <q-dialog v-model=\"showPreviousFiles\">\r\n        <q-card>\r\n          <q-card-section>\r\n            <q-list>\r\n              <q-item v-for=\"(file, index) in selectedFiles\" :key=\"index\">\r\n                <q-item-section>\r\n                  <q-item-label>{{ file.name }}</q-item-label>\r\n                </q-item-section>\r\n                <q-item-section side>\r\n                  <q-btn label=\"View\" @click=\"viewPreviousFile(file)\" />\r\n                </q-item-section>\r\n              </q-item>\r\n            </q-list>\r\n          </q-card-section>\r\n        </q-card>\r\n      </q-dialog>\r\n    </q-layout>\r\n  </template>\r\n  \r\n  <script>\r\n  import PdfViewerPage from \"@/components/PdfViewerPage\";\r\n  import axios from 'axios';\r\n  import { useRouter } from 'vue-router'\r\n  \r\n  export default {\r\n    components: { PdfViewerPage },\r\n  \r\n    data() {\r\n      return {\r\n        selectedPdfFileName: '',\r\n        isUserPopupOpen: false,\r\n        setselectedPdfFileName: null,\r\n      };\r\n    },\r\n  \r\n    methods: {\r\n        goToHome() {\r\n        this.$router.push('/')\r\n      },\r\n      goToPdf() {\r\n        this.$router.push('/pdf')\r\n      },\r\n     \r\n      handleFileChange(event) {\r\n      const file = event.target.files[0];\r\n      if (file && file.type === 'application/pdf') {\r\n        // Emit an event with the selected file\r\n        // this.$emit('file-selected', file);\r\n        this.selectedPdfFileName = file.name;\r\n      } else {\r\n        alert('Please select a valid PDF file.');\r\n      }\r\n    },\r\n\r\n    onSubmitDataTable(data){\r\n      // console.log(\"newwww\" ,data);\r\n      this.tableData = data;\r\n      console.log(\"tesssst\");\r\n      console.log(\"outerrrr set data\", data);\r\n    },\r\n  \r\n      handleDxfFileLoaded(data) {\r\n    // Update uploadedFileContent when the DXF file is loaded\r\n    this.uploadedFileContent = data;\r\n  \r\n    // Pass the loaded DXF file content to the ViewerPage component for rendering\r\n    this.$refs.viewerPage.renderDxfFile(data); // Assuming a method called renderDxfFile exists in the ViewerPage component\r\n  },\r\n      openUserPopup() {\r\n        this.isUserPopupOpen = true;\r\n      },\r\n      closeUserPopup() {\r\n        this.isUserPopupOpen = false;\r\n      },\r\n      openPreviousFiles() {\r\n    // Use Axios to fetch filenames from the backend endpoint\r\n    axios.get('http://172.18.100.240:9999/dxf_files/')\r\n        .then(response => {\r\n          console.log(\"PREEEEEEEEEEEEEEEEEEEEEE\")\r\n              console.log(response.data.files)\r\n              this.selectedFiles = response.data.files.map(file => ({\r\n                    name: file,\r\n                    \r\n                }));\r\n  \r\n                // Toggle the flag to show the dialog/modal\r\n                this.showPreviousFiles = true;\r\n  \r\n                console.log(\"dnmfvvvvvv\")\r\n                console.log(this.selectedFiles);\r\n  \r\n        })\r\n        .catch(error => {\r\n            // Handle errors if the request fails\r\n            console.error('Error fetching filenames:', error);\r\n            // Display an error message to the user\r\n            this.$q.notify({\r\n                type: 'negative',\r\n                message: 'Failed to fetch filenames. Please try again.'\r\n            });\r\n        });\r\n  },\r\n\r\n  viewPreviousFile(file) {\r\n    // Set the dxfUrl to the selected file's URL\r\n    this.dxfUrl = file.url;\r\n  \r\n    // Save the selected file to browser storage\r\n    this.saveToFileStorage(file);\r\n  \r\n    // Optionally, you may want to close the dialog/modal after selecting the file\r\n    this.showPreviousFiles = false;\r\n  \r\n    // Fetch the file content using the URL\r\n    fetch(this.dxfUrl)\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch');\r\n    }\r\n    return response.blob();\r\n  })\r\n  .then(blob => {\r\n    // Handle the fetched blob data\r\n    console.log('Fetched blob data:', blob);\r\n    this.$refs.viewerPage.renderDxfFile(blob); // Assuming a method called renderDxfFile exists in the ViewerPage component\r\n  })\r\n  .catch(error => {\r\n    // Handle fetch errors\r\n    console.error('Fetch error:', error.message);\r\n    // Display an error message to the user\r\n    this.$q.notify({\r\n      type: 'negative',\r\n      message: 'Error occurred: ' + error.message\r\n    });\r\n  });\r\n  \r\n  },\r\n  \r\n  saveToFileStorage(file) {\r\n  // Retrieve previously saved files from storage\r\n  const storedFiles = JSON.parse(localStorage.getItem('selectedFiles')) || [];\r\n  \r\n  // Check if the file name already exists in the list of selected files\r\n  const isFileExists = storedFiles.some(savedFile => savedFile.name === file.name);\r\n  \r\n  // If the file name does not exist, add the selected file to the list of stored files\r\n  if (!isFileExists) {\r\n    storedFiles.push(file);\r\n  }\r\n  \r\n  // Save the updated list of files to storage\r\n  localStorage.setItem('selectedFiles', JSON.stringify(storedFiles));\r\n  },\r\n  \r\n  \r\n  loadFromStorage() {\r\n    // Retrieve previously saved files from storage\r\n    const storedFiles = JSON.parse(localStorage.getItem('selectedFiles')) || [];\r\n    // Set the selectedFiles array to the stored files\r\n    this.selectedFiles = storedFiles;\r\n  },\r\n  \r\n},\r\n  \r\n\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"less\">\r\n  .navbarContent {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .leftNav {\r\n    display: flex;\r\n  }\r\n  .logoname {\r\n    font-family: \"CustomFont2\", Arial, sans-serif;\r\n    margin-left: 570px;\r\n    font-size: 40px;\r\n  }\r\n  .fileCenter {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .centralUploader {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    z-index: 10;\r\n    font-family: \"CustomFont\", Arial, sans-serif;\r\n  }\r\n \r\n  .user-popup {\r\n    position: absolute;\r\n    top: 100px; /* Adjust the top position as needed */\r\n    right: 20px; /* Adjust the right position as needed */\r\n    width: 200px; /* Set the width of the popup */\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n    z-index: 1000; /* Ensure the popup appears above other elements */\r\n  }\r\n  .user-info {\r\n    padding: 10px;\r\n  }\r\n  .user-details {\r\n    margin-bottom: 10px;\r\n  }\r\n  .username {\r\n    font-weight: bold;\r\n  }\r\n  .user-actions {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .cancel-button,\r\n  .logout-button {\r\n    padding: 5px 10px;\r\n    background-color: #ccc;\r\n    border: none;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n  .cancel-button:hover,\r\n  .logout-button:hover {\r\n    background-color: #bbb;\r\n  }\r\n  .pdf-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .button-container {\r\n    display: flex;\r\n    justify-content: space-between; /* Distribute items along the main axis */\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n  \r\n  .select-pdf-btn {\r\n    background-color: #3490dc;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    border-radius: 0.25rem;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .home-btn {\r\n    background-color: #6c757d;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    padding: 0.5rem 1rem;\r\n    border: none;\r\n    border-radius: 0.25rem;\r\n    cursor: pointer;\r\n    // margin-left: 1120px;\r\n    margin-left: 580px;\r\n  }\r\n\r\n  /*align end and space*/\r\n  /* .home-btn {\r\n  background-color: #6c757d;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  padding: 0.5rem 1rem;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n  align-self: flex-end;\r\n} */\r\n  \r\n  .pdf-preview {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .pdf-preview-inner {\r\n    background-color: #fff;\r\n    padding: 1rem;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    width: 1000px;\r\n    height: 800px; /* Increase height as needed */\r\n  }\r\n  \r\n  .pdf-embed {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  </style>\r\n  "]}]}