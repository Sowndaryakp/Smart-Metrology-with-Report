{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\parser\\DxfArrayScanner.js","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\parser\\DxfArrayScanner.js","mtime":1704432456000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\babel.config.js","mtime":1694764762000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIER4ZkFycmF5U2Nhbm5lcgogKgogKiBCYXNlZCBvZmYgdGhlIEF1dG9DYWQgMjAxMiBEWEYgUmVmZXJlbmNlCiAqIGh0dHA6Ly9pbWFnZXMuYXV0b2Rlc2suY29tL2Fkc2svZmlsZXMvYXV0b2NhZF8yMDEyX3BkZl9keGYtcmVmZXJlbmNlX2VudS5wZGYKICoKICogUmVhZHMgdGhyb3VnaCBhbiBhcnJheSByZXByZXNlbnRpbmcgbGluZXMgb2YgYSBkeGYgZmlsZS4gVGFrZXMgYW4gYXJyYXkgYW5kCiAqIHByb3ZpZGVzIGFuIGVhc3kgaW50ZXJmYWNlIHRvIGV4dHJhY3QgZ3JvdXAgY29kZSBhbmQgdmFsdWUgcGFpcnMuCiAqIEBwYXJhbSBkYXRhIC0gYW4gYXJyYXkgd2hlcmUgZWFjaCBlbGVtZW50IHJlcHJlc2VudHMgYSBsaW5lIGluIHRoZSBkeGYgZmlsZQogKiBAY29uc3RydWN0b3IKICovCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIER4ZkFycmF5U2Nhbm5lcihkYXRhKSB7CiAgdGhpcy5fcG9pbnRlciA9IDA7CiAgdGhpcy5fZGF0YSA9IGRhdGE7CiAgdGhpcy5fZW9mID0gZmFsc2U7Cn0KCi8qKgogKiBHZXRzIHRoZSBuZXh0IGdyb3VwIChjb2RlLCB2YWx1ZSkgZnJvbSB0aGUgYXJyYXkuIEEgZ3JvdXAgaXMgdHdvIGNvbnNlY3V0aXZlIGVsZW1lbnRzCiAqIGluIHRoZSBhcnJheS4gVGhlIGZpcnN0IGlzIHRoZSBjb2RlLCB0aGUgc2Vjb25kIGlzIHRoZSB2YWx1ZS4KICogQHJldHVybnMge3tjb2RlOiBOdW1iZXJ9fCp9CiAqLwpEeGZBcnJheVNjYW5uZXIucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiAoKSB7CiAgdmFyIGdyb3VwOwogIGlmICghdGhpcy5oYXNOZXh0KCkpIHsKICAgIGlmICghdGhpcy5fZW9mKSB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgZW5kIG9mIGlucHV0OiBFT0YgZ3JvdXAgbm90IHJlYWQgYmVmb3JlIGVuZCBvZiBmaWxlLiBFbmRlZCBvbiBjb2RlICcgKyB0aGlzLl9kYXRhW3RoaXMuX3BvaW50ZXJdKTtlbHNlIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNhbGwgXCduZXh0XCcgYWZ0ZXIgRU9GIGdyb3VwIGhhcyBiZWVuIHJlYWQnKTsKICB9CiAgZ3JvdXAgPSB7CiAgICBjb2RlOiBwYXJzZUludCh0aGlzLl9kYXRhW3RoaXMuX3BvaW50ZXJdKQogIH07CiAgdGhpcy5fcG9pbnRlcisrOwogIGdyb3VwLnZhbHVlID0gcGFyc2VHcm91cFZhbHVlKGdyb3VwLmNvZGUsIHRoaXMuX2RhdGFbdGhpcy5fcG9pbnRlcl0pOwogIHRoaXMuX3BvaW50ZXIrKzsKICBpZiAoZ3JvdXAuY29kZSA9PT0gMCAmJiBncm91cC52YWx1ZSA9PT0gJ0VPRicpIHRoaXMuX2VvZiA9IHRydWU7CiAgdGhpcy5sYXN0UmVhZEdyb3VwID0gZ3JvdXA7CiAgcmV0dXJuIGdyb3VwOwp9OwpEeGZBcnJheVNjYW5uZXIucHJvdG90eXBlLnBlZWsgPSBmdW5jdGlvbiAoKSB7CiAgaWYgKCF0aGlzLmhhc05leHQoKSkgewogICAgaWYgKCF0aGlzLl9lb2YpIHRocm93IG5ldyBFcnJvcignVW5leHBlY3RlZCBlbmQgb2YgaW5wdXQ6IEVPRiBncm91cCBub3QgcmVhZCBiZWZvcmUgZW5kIG9mIGZpbGUuIEVuZGVkIG9uIGNvZGUgJyArIHRoaXMuX2RhdGFbdGhpcy5fcG9pbnRlcl0pO2Vsc2UgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY2FsbCBcJ25leHRcJyBhZnRlciBFT0YgZ3JvdXAgaGFzIGJlZW4gcmVhZCcpOwogIH0KICB2YXIgZ3JvdXAgPSB7CiAgICBjb2RlOiBwYXJzZUludCh0aGlzLl9kYXRhW3RoaXMuX3BvaW50ZXJdKQogIH07CiAgZ3JvdXAudmFsdWUgPSBwYXJzZUdyb3VwVmFsdWUoZ3JvdXAuY29kZSwgdGhpcy5fZGF0YVt0aGlzLl9wb2ludGVyICsgMV0pOwogIHJldHVybiBncm91cDsKfTsKRHhmQXJyYXlTY2FubmVyLnByb3RvdHlwZS5yZXdpbmQgPSBmdW5jdGlvbiAobnVtYmVyT2ZHcm91cHMpIHsKICBudW1iZXJPZkdyb3VwcyA9IG51bWJlck9mR3JvdXBzIHx8IDE7CiAgdGhpcy5fcG9pbnRlciA9IHRoaXMuX3BvaW50ZXIgLSBudW1iZXJPZkdyb3VwcyAqIDI7Cn07CgovKioKICogUmV0dXJucyB0cnVlIGlmIHRoZXJlIGlzIGFub3RoZXIgY29kZS92YWx1ZSBwYWlyICgyIGVsZW1lbnRzIGluIHRoZSBhcnJheSkuCiAqIEByZXR1cm5zIHtib29sZWFufQogKi8KRHhmQXJyYXlTY2FubmVyLnByb3RvdHlwZS5oYXNOZXh0ID0gZnVuY3Rpb24gKCkgewogIC8vIENoZWNrIGlmIHdlIGhhdmUgcmVhZCBFT0YgZ3JvdXAgY29kZQogIGlmICh0aGlzLl9lb2YpIHsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIC8vIFdlIG5lZWQgdG8gYmUgc3VyZSB0aGVyZSBhcmUgdHdvIGxpbmVzIGF2YWlsYWJsZQogIGlmICh0aGlzLl9wb2ludGVyID4gdGhpcy5fZGF0YS5sZW5ndGggLSAyKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQogIHJldHVybiB0cnVlOwp9OwoKLyoqCiAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgc2Nhbm5lciBpcyBhdCB0aGUgZW5kIG9mIHRoZSBhcnJheQogKiBAcmV0dXJucyB7Ym9vbGVhbn0KICovCkR4ZkFycmF5U2Nhbm5lci5wcm90b3R5cGUuaXNFT0YgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHRoaXMuX2VvZjsKfTsKCi8qKgogKiBQYXJzZSBhIHZhbHVlIHRvIGl0cyBwcm9wZXIgdHlwZS4KICogU2VlIHBhZ2VzIDMgLSAxMCBvZiB0aGUgQXV0b0NhZCBEWEYgMjAxMiByZWZlcmVuY2UgZ2l2ZW4gYXQgdGhlIHRvcCBvZiB0aGlzIGZpbGUKICoKICogQHBhcmFtIGNvZGUKICogQHBhcmFtIHZhbHVlCiAqIEByZXR1cm5zIHsqfQogKi8KZnVuY3Rpb24gcGFyc2VHcm91cFZhbHVlKGNvZGUsIHZhbHVlKSB7CiAgaWYgKGNvZGUgPD0gOSkgcmV0dXJuIHZhbHVlOwogIGlmIChjb2RlID49IDEwICYmIGNvZGUgPD0gNTkpIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gNjAgJiYgY29kZSA8PSA5OSkgcmV0dXJuIHBhcnNlSW50KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gMTAwICYmIGNvZGUgPD0gMTA5KSByZXR1cm4gdmFsdWU7CiAgaWYgKGNvZGUgPj0gMTEwICYmIGNvZGUgPD0gMTQ5KSByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZS50cmltKCkpOwogIGlmIChjb2RlID49IDE2MCAmJiBjb2RlIDw9IDE3OSkgcmV0dXJuIHBhcnNlSW50KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gMjEwICYmIGNvZGUgPD0gMjM5KSByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZS50cmltKCkpOwogIGlmIChjb2RlID49IDI3MCAmJiBjb2RlIDw9IDI4OSkgcmV0dXJuIHBhcnNlSW50KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gMjkwICYmIGNvZGUgPD0gMjk5KSByZXR1cm4gcGFyc2VCb29sZWFuKHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gMzAwICYmIGNvZGUgPD0gMzY5KSByZXR1cm4gdmFsdWU7CiAgaWYgKGNvZGUgPj0gMzcwICYmIGNvZGUgPD0gMzg5KSByZXR1cm4gcGFyc2VJbnQodmFsdWUudHJpbSgpKTsKICBpZiAoY29kZSA+PSAzOTAgJiYgY29kZSA8PSAzOTkpIHJldHVybiB2YWx1ZTsKICBpZiAoY29kZSA+PSA0MDAgJiYgY29kZSA8PSA0MDkpIHJldHVybiBwYXJzZUludCh2YWx1ZS50cmltKCkpOwogIGlmIChjb2RlID49IDQxMCAmJiBjb2RlIDw9IDQxOSkgcmV0dXJuIHZhbHVlOwogIGlmIChjb2RlID49IDQyMCAmJiBjb2RlIDw9IDQyOSkgcmV0dXJuIHBhcnNlSW50KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gNDMwICYmIGNvZGUgPD0gNDM5KSByZXR1cm4gdmFsdWU7CiAgaWYgKGNvZGUgPj0gNDQwICYmIGNvZGUgPD0gNDU5KSByZXR1cm4gcGFyc2VJbnQodmFsdWUudHJpbSgpKTsKICBpZiAoY29kZSA+PSA0NjAgJiYgY29kZSA8PSA0NjkpIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gNDcwICYmIGNvZGUgPD0gNDgxKSByZXR1cm4gdmFsdWU7CiAgaWYgKGNvZGUgPT09IDk5OSkgcmV0dXJuIHZhbHVlOwogIGlmIChjb2RlID49IDEwMDAgJiYgY29kZSA8PSAxMDA5KSByZXR1cm4gdmFsdWU7CiAgaWYgKGNvZGUgPj0gMTAxMCAmJiBjb2RlIDw9IDEwNTkpIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlLnRyaW0oKSk7CiAgaWYgKGNvZGUgPj0gMTA2MCAmJiBjb2RlIDw9IDEwNzEpIHJldHVybiBwYXJzZUludCh2YWx1ZS50cmltKCkpOwogIGNvbnNvbGUubG9nKCdXQVJOSU5HOiBHcm91cCBjb2RlIGRvZXMgbm90IGhhdmUgYSBkZWZpbmVkIHR5cGU6ICVqJywgewogICAgY29kZTogY29kZSwKICAgIHZhbHVlOiB2YWx1ZQogIH0pOwogIHJldHVybiB2YWx1ZTsKfQoKLyoqCiAqIFBhcnNlIGEgYm9vbGVhbiBhY2NvcmRpbmcgdG8gYSAxIG9yIDAgdmFsdWUKICogQHBhcmFtIHN0cgogKiBAcmV0dXJucyB7Ym9vbGVhbn0KICovCmZ1bmN0aW9uIHBhcnNlQm9vbGVhbihzdHIpIHsKICBpZiAoc3RyID09PSAnMCcpIHJldHVybiBmYWxzZTsKICBpZiAoc3RyID09PSAnMScpIHJldHVybiB0cnVlOwogIHRocm93IFR5cGVFcnJvcignU3RyaW5nIFwnJyArIHN0ciArICdcJyBjYW5ub3QgYmUgY2FzdCB0byBCb29sZWFuIHR5cGUnKTsKfQ=="},{"version":3,"names":["DxfArrayScanner","data","_pointer","_data","_eof","prototype","next","group","hasNext","Error","code","parseInt","value","parseGroupValue","lastReadGroup","peek","rewind","numberOfGroups","length","isEOF","parseFloat","trim","parseBoolean","console","log","str","TypeError"],"sources":["C:/Users/SDC-8/Desktop/Sowndarya/CMTI Projects/SmartMetrology/smart-frontend/node_modules/dxf-viewer/src/parser/DxfArrayScanner.js"],"sourcesContent":["/**\n * DxfArrayScanner\n *\n * Based off the AutoCad 2012 DXF Reference\n * http://images.autodesk.com/adsk/files/autocad_2012_pdf_dxf-reference_enu.pdf\n *\n * Reads through an array representing lines of a dxf file. Takes an array and\n * provides an easy interface to extract group code and value pairs.\n * @param data - an array where each element represents a line in the dxf file\n * @constructor\n */\nexport default function DxfArrayScanner(data) {\n    this._pointer = 0;\n    this._data = data;\n    this._eof = false;\n}\n\n/**\n * Gets the next group (code, value) from the array. A group is two consecutive elements\n * in the array. The first is the code, the second is the value.\n * @returns {{code: Number}|*}\n */\nDxfArrayScanner.prototype.next = function() {\n    var group;\n    if(!this.hasNext()) {\n        if(!this._eof)\n            throw new Error('Unexpected end of input: EOF group not read before end of file. Ended on code ' + this._data[this._pointer]);\n        else\n            throw new Error('Cannot call \\'next\\' after EOF group has been read');\n    }\n\n    group = {\n        code: parseInt(this._data[this._pointer])\n    };\n\n    this._pointer++;\n\n    group.value = parseGroupValue(group.code, this._data[this._pointer]);\n    \n    this._pointer++;\n\n    if(group.code === 0 && group.value === 'EOF') this._eof = true;\n\n    this.lastReadGroup = group;\n\n    return group;\n};\n\nDxfArrayScanner.prototype.peek = function() {\n    if(!this.hasNext()) {\n        if(!this._eof)\n            throw new Error('Unexpected end of input: EOF group not read before end of file. Ended on code ' + this._data[this._pointer]);\n        else\n            throw new Error('Cannot call \\'next\\' after EOF group has been read');\n    }\n    \n    var group = {\n        code: parseInt(this._data[this._pointer])\n    };\n\n    group.value = parseGroupValue(group.code, this._data[this._pointer + 1]);\n\n    return group;\n};\n\n\nDxfArrayScanner.prototype.rewind = function(numberOfGroups) {\n    numberOfGroups = numberOfGroups || 1;\n    this._pointer = this._pointer - numberOfGroups * 2;\n};\n\n/**\n * Returns true if there is another code/value pair (2 elements in the array).\n * @returns {boolean}\n */\nDxfArrayScanner.prototype.hasNext = function() {\n    // Check if we have read EOF group code\n    if(this._eof) {\n        return false;\n    }\n    \n    // We need to be sure there are two lines available\n    if(this._pointer > this._data.length - 2) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Returns true if the scanner is at the end of the array\n * @returns {boolean}\n */\nDxfArrayScanner.prototype.isEOF = function() {\n    return this._eof;\n};\n\n/**\n * Parse a value to its proper type.\n * See pages 3 - 10 of the AutoCad DXF 2012 reference given at the top of this file\n *\n * @param code\n * @param value\n * @returns {*}\n */\nfunction parseGroupValue(code, value) {\n    if(code <= 9) return value;\n    if(code >= 10 && code <= 59) return parseFloat(value.trim());\n    if(code >= 60 && code <= 99) return parseInt(value.trim());\n    if(code >= 100 && code <= 109) return value;\n    if(code >= 110 && code <= 149) return parseFloat(value.trim());\n    if(code >= 160 && code <= 179) return parseInt(value.trim());\n    if(code >= 210 && code <= 239) return parseFloat(value.trim());\n    if(code >= 270 && code <= 289) return parseInt(value.trim());\n    if(code >= 290 && code <= 299) return parseBoolean(value.trim());\n    if(code >= 300 && code <= 369) return value;\n    if(code >= 370 && code <= 389) return parseInt(value.trim());\n    if(code >= 390 && code <= 399) return value;\n    if(code >= 400 && code <= 409) return parseInt(value.trim());\n    if(code >= 410 && code <= 419) return value;\n    if(code >= 420 && code <= 429) return parseInt(value.trim());\n    if(code >= 430 && code <= 439) return value;\n    if(code >= 440 && code <= 459) return parseInt(value.trim());\n    if(code >= 460 && code <= 469) return parseFloat(value.trim());\n    if(code >= 470 && code <= 481) return value;\n    if(code === 999) return value;\n    if(code >= 1000 && code <= 1009) return value;\n    if(code >= 1010 && code <= 1059) return parseFloat(value.trim());\n    if(code >= 1060 && code <= 1071) return parseInt(value.trim());\n\n    console.log('WARNING: Group code does not have a defined type: %j', { code: code, value: value });\n    return value;\n}\n\n/**\n * Parse a boolean according to a 1 or 0 value\n * @param str\n * @returns {boolean}\n */\nfunction parseBoolean(str) {\n    if(str === '0') return false;\n    if(str === '1') return true;\n    throw TypeError('String \\'' + str + '\\' cannot be cast to Boolean type');\n}"],"mappings":"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"}]}