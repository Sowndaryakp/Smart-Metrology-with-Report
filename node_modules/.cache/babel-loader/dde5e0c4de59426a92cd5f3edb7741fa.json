{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\src\\components\\ViewerPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\src\\components\\ViewerPage.vue","mtime":1711605358000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\babel.config.js","mtime":1694764762000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IER4ZlZpZXdlciBmcm9tICJAL2NvbXBvbmVudHMvRHhmVmlld2VyIjsKaW1wb3J0IHsgRHhmVmlld2VyIGFzIF9EeGZWaWV3ZXIgfSBmcm9tICJkeGYtdmlld2VyIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgbWFpbkZvbnQgZnJvbSAiQC9hc3NldHMvZm9udHMvUm9ib3RvLUxpZ2h0SXRhbGljLnR0ZiI7CmltcG9ydCBhdXgxRm9udCBmcm9tICJAL2Fzc2V0cy9mb250cy9Ob3RvU2Fuc0Rpc3BsYXktU2VtaUNvbmRlbnNlZExpZ2h0SXRhbGljLnR0ZiI7CmltcG9ydCBhdXgyRm9udCBmcm9tICJAL2Fzc2V0cy9mb250cy9IYW5hTWluQS50dGYiOwppbXBvcnQgYXV4M0ZvbnQgZnJvbSAiQC9hc3NldHMvZm9udHMvTmFudW1Hb3RoaWMtUmVndWxhci50dGYiOwppbXBvcnQgTGF5ZXJzTGlzdCBmcm9tICJAL2NvbXBvbmVudHMvTGF5ZXJzTGlzdCI7CmltcG9ydCBEYXRhVGFibGUgZnJvbSAiQC9jb21wb25lbnRzL0RhdGFUYWJsZSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBDb25uZWN0aW9ucyBmcm9tICcuL0Nvbm5lY3Rpb25zLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVmlld2VyUGFnZSIsCiAgY29tcG9uZW50czogewogICAgTGF5ZXJzTGlzdCwKICAgIER4ZlZpZXdlciwKICAgIERhdGFUYWJsZSwKICAgIENvbm5lY3Rpb25zCiAgfSwKICBwcm9wczogewogICAgZHhmVXJsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgdXBsb2FkZWRGaWxlOiBPYmplY3QKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYXllcnM6IG51bGwsCiAgICAgIGZvbnRzOiBbXSwKICAgICAgdXBsb2FkZWRGaWxlQ29udGVudDogbnVsbCwKICAgICAgLy8gQWRkIGEgdmFyaWFibGUgdG8gaG9sZCB1cGxvYWRlZCBmaWxlIGNvbnRlbnQKICAgICAgZmlsZW5hbWVuZXc6ICJwMTAwMCIsCiAgICAgIGluc3BlY3Rpb25SZXBvcnROdW1iZXI6ICcnLAogICAgICAvLyBBZGRpdGlvbmFsIGZpZWxkCiAgICAgIHByb2plY3ROdW1iZXI6ICcnLAogICAgICAvLyBBZGRpdGlvbmFsIGZpZWxkCiAgICAgIHByb2plY3ROYW1lOiAnJywKICAgICAgLy8gQWRkaXRpb25hbCBmaWVsZAogICAgICBncm91cDogJycsCiAgICAgIC8vIEFkZGl0aW9uYWwgZmllbGQKICAgICAgcGFydE51bWJlcjogJycsCiAgICAgIC8vIEFkZGl0aW9uYWwgZmllbGQKICAgICAgcGFydE5hbWU6ICcnIC8vIEFkZGl0aW9uYWwgZmllbGQKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgX09uTG9hZGVkKCkgewogICAgICBjb25zdCBsYXllcnMgPSB0aGlzLiRyZWZzLnZpZXdlci5HZXRWaWV3ZXIoKS5HZXRMYXllcnMoKTsKICAgICAgbGF5ZXJzLmZvckVhY2gobHlyID0+IFZ1ZS5zZXQobHlyLCAiaXNWaXNpYmxlIiwgdHJ1ZSkpOwogICAgICB0aGlzLmxheWVycyA9IGxheWVyczsKICAgICAgY29uc3QgZmlsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbdHlwZT0iZmlsZSJdJyk7IC8vIEFzc3VtaW5nIHlvdSBoYXZlIG9ubHkgb25lIGZpbGUgaW5wdXQKCiAgICAgIGlmIChmaWxlSW5wdXQgJiYgZmlsZUlucHV0LmZpbGVzLmxlbmd0aCA+IDApIHsKICAgICAgICAvLyBHZXQgdGhlIHVwbG9hZGVkIGZpbGUgZGF0YQogICAgICAgIHRoaXMudXBsb2FkZWRGaWxlID0gZmlsZUlucHV0LmZpbGVzWzBdOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ05vIGZpbGUgdXBsb2FkZWQgb3IgZmlsZSBpbnB1dCBub3QgZm91bmQuJyk7CiAgICAgIH0KICAgICAgdGhpcy51cGxvYWRBbmRQYXJzZUZpbGUoKTsKICAgICAgdGhpcy4kZW1pdCgnZHhmLWZpbGUtbG9hZGVkJywgdGhpcy51cGxvYWRlZEZpbGVDb250ZW50KTsKICAgICAgY29uc29sZS5sb2coIlZpZXdlclBhZ2UgU2VsZWN0ZWQgZmlsZW5hbWU6IiwgdGhpcy51cGxvYWRlZEZpbGUubmFtZSk7CiAgICAgIHRoaXMuZmlsZW5hbWVuZXcgPSB0aGlzLnVwbG9hZGVkRmlsZS5uYW1lOwogICAgICB0aGlzLiRlbWl0KCdmaWxlLWxvYWRlZCcsIHRoaXMudXBsb2FkZWRGaWxlLm5hbWUpOwogICAgfSwKICAgIGhhbmRsZVN1Ym1pdERhdGEoZGF0YSkgewogICAgICAvL0xvZyB0aGUgc2VsZWN0ZWQgZmlsZSBuYW1lIGFuZCB0YWJsZSBkYXRhIGluIHRoZSBjb25zb2xlCiAgICAgIC8vIGNvbnNvbGUubG9nKCJ3b3JraW5nIik7CiAgICAgIHRoaXMuJGVtaXQoJ3N1Ym1pdC1kYXRhJywgZGF0YSk7CiAgICB9LAogICAgb25TdWJtaXREYXRhVGFibGUoZGF0YVRvU3VibWl0KSB7CiAgICAgIGNvbnNvbGUubG9nKGRhdGFUb1N1Ym1pdCk7CiAgICAgIGNvbnNvbGUubG9nKCdEYXRhIHRvIGJlIHN1Ym1pdHRlZDonLCBkYXRhVG9TdWJtaXQpOyAvLyBBZGQgdGhpcyBsaW5lIGZvciBkZWJ1Z2dpbmcKICAgICAgdGhpcy4kZW1pdCgnc3VibWl0LWRhdGEnLCBkYXRhVG9TdWJtaXQpOwogICAgfSwKICAgIGhhbmRsZUVudGVyZWRWYWx1ZXMoZGF0YSkgewogICAgICBjb25zdCBkYXRhVG9TdWJtaXQgPSB7CiAgICAgICAgaW5zcGVjdGlvbl9yZXBvcnRfbnVtYmVyOiB0aGlzLmluc3BlY3Rpb25SZXBvcnROdW1iZXIsCiAgICAgICAgcHJvamVjdF9udW1iZXI6IHRoaXMucHJvamVjdE51bWJlciwKICAgICAgICBwcm9qZWN0X25hbWU6IHRoaXMucHJvamVjdE5hbWUsCiAgICAgICAgZ3JvdXA6IHRoaXMuZ3JvdXAsCiAgICAgICAgcGFydF9udW1iZXI6IHRoaXMucGFydE51bWJlciwKICAgICAgICBwYXJ0X25hbWU6IHRoaXMucGFydE5hbWUsCiAgICAgICAgdXBsb2FkZWRGaWxlQ29udGVudDogZGF0YQogICAgICB9OwogICAgICBjb25zb2xlLmxvZygnRGF0YSB0byBiZSBzdWJtaXR0ZWQ6JywgZGF0YVRvU3VibWl0KTsgLy8gQWRkIHRoaXMgbGluZSBmb3IgZGVidWdnaW5nCiAgICAgIHRoaXMuJGVtaXQoJ3N1Ym1pdC1kYXRhJywgZGF0YVRvU3VibWl0KTsKICAgICAgY29uc29sZS5sb2coJ0VudGVyZWQgdmFsdWVzIGZyb20gRGF0YVRhYmxlOicsIGRhdGFUb1N1Ym1pdCk7IC8vIEVuc3VyZSB0aGlzIGxpbmUgaXMgY29ycmVjdGx5IHBsYWNlZAogICAgfSwKCiAgICBfT25DbGVhcmVkKCkgewogICAgICB0aGlzLmxheWVycyA9IG51bGw7CiAgICAgIHRoaXMudXBsb2FkZWRGaWxlQ29udGVudCA9ICcnOyAvLyBDbGVhciB1cGxvYWRlZCBmaWxlIGNvbnRlbnQgd2hlbiBjbGVhcmVkCiAgICB9LAoKICAgIF9PblRvZ2dsZUxheWVyKGxheWVyLCBuZXdTdGF0ZSkgewogICAgICBsYXllci5pc1Zpc2libGUgPSBuZXdTdGF0ZTsKICAgICAgdGhpcy4kcmVmcy52aWV3ZXIuR2V0Vmlld2VyKCkuU2hvd0xheWVyKGxheWVyLm5hbWUsIG5ld1N0YXRlKTsKICAgIH0sCiAgICBfT25Ub2dnbGVBbGwobmV3U3RhdGUpIHsKICAgICAgaWYgKHRoaXMubGF5ZXJzKSB7CiAgICAgICAgZm9yIChjb25zdCBsYXllciBvZiB0aGlzLmxheWVycykgewogICAgICAgICAgaWYgKGxheWVyLmlzVmlzaWJsZSAhPT0gbmV3U3RhdGUpIHsKICAgICAgICAgICAgdGhpcy5fT25Ub2dnbGVMYXllcihsYXllciwgbmV3U3RhdGUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIF9oYW5kbGVEeGZIYW5kbGVDbGlja0R4ZihoYW5kbGUpIHsKICAgICAgLy8gQ2hhbmdlIHRoZSBjb2xvciBvZiB0aGUgY29ycmVzcG9uZGluZyBkaW1lbnNpb24gaW4gdGhlIERYRiBkaWFncmFtCiAgICAgIHRoaXMuJHJlZnMudmlld2VyLkdldFZpZXdlcigpLkNoYW5nZURpbWVuc2lvbkNvbG9yKGhhbmRsZSwgIiNmZjAwMDAiKTsKICAgIH0sCiAgICBfaGFuZGxlRGF0YVRhYmxlSGFuZGxlQ2xpY2soaGFuZGxlKSB7CiAgICAgIC8vIEhhbmRsZSB0aGUgY2xpY2sgZXZlbnQgZnJvbSBEYXRhVGFibGUKICAgICAgLy8gRm9yIGV4YW1wbGUsIHVwZGF0ZSB0aGUgY29sb3Igb2YgdGhlIGNsaWNrZWQgaGFuZGxlIGluIHRoZSBEeGZWaWV3ZXIgY29tcG9uZW50CiAgICAgIHRoaXMuJHJlZnMudmlld2VyLkdldFZpZXdlcigpLkNoYW5nZUhhbmRsZUNvbG9yKGhhbmRsZSwgIiNmZjAwMDAiKTsKICAgIH0sCiAgICBfT25NZXNzYWdlKGUpIHsKICAgICAgbGV0IHR5cGUgPSAiaW5mbyI7CiAgICAgIHN3aXRjaCAoZS5kZXRhaWwubGV2ZWwpIHsKICAgICAgICBjYXNlIF9EeGZWaWV3ZXIuTWVzc2FnZUxldmVsLldBUk46CiAgICAgICAgICB0eXBlID0gIndhcm5pbmciOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSBfRHhmVmlld2VyLk1lc3NhZ2VMZXZlbC5FUlJPUjoKICAgICAgICAgIHR5cGUgPSAibmVnYXRpdmUiOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgdGhpcy4kcS5ub3RpZnkoewogICAgICAgIHR5cGUsCiAgICAgICAgbWVzc2FnZTogZS5kZXRhaWwubWVzc2FnZQogICAgICB9KTsKICAgIH0sCiAgICAvLyBBZGQgYSBuZXcgZnVuY3Rpb24gdG8gaGFuZGxlIGZpbGUgdXBsb2FkIGFuZCBzZW5kIGl0IHRvIHRoZSBiYWNrZW5kCiAgICBhc3luYyB1cGxvYWRBbmRQYXJzZUZpbGUoKSB7CiAgICAgIGNvbnN0IGZpbGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9ImZpbGUiXScpOwogICAgICBpZiAoIWZpbGVJbnB1dCB8fCBmaWxlSW5wdXQuZmlsZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignTm8gZmlsZSB1cGxvYWRlZCBvciBmaWxlIGlucHV0IG5vdCBmb3VuZC4nKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZUlucHV0LmZpbGVzWzBdKTsKICAgICAgdHJ5IHsKICAgICAgICAvLyBTZW5kIHRoZSBmaWxlIHRvIHRoZSBiYWNrZW5kIHVzaW5nIEF4aW9zCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KCdodHRwOi8vMTcyLjE4LjEwMC4yNDA6OTk5OS9wYXJzZV9keGYvJywgZm9ybURhdGEsIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdtdWx0aXBhcnQvZm9ybS1kYXRhJwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMudXBsb2FkZWRGaWxlQ29udGVudCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBsb2FkaW5nIGFuZCBwYXJzaW5nIGZpbGU6JywgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlRHhmRmlsZUxvYWRlZChkYXRhKSB7CiAgICAgIC8vIFVwZGF0ZSB1cGxvYWRlZEZpbGVDb250ZW50IHdoZW4gdGhlIERYRiBmaWxlIGlzIGxvYWRlZAogICAgICB0aGlzLnVwbG9hZGVkRmlsZUNvbnRlbnQgPSBkYXRhOwogICAgfSwKICAgIGhhbmRsZUZpbGVTZWxlY3RlZChmaWxlKSB7CiAgICAgIC8vIFJlbmRlciB0aGUgRFhGIGZpbGUgaW4gdGhlIHZpZXdlcgogICAgICAvLyBBc3N1bWluZyB5b3UgaGF2ZSBhIG1ldGhvZCB0byByZW5kZXIgRFhGIGZpbGVzCiAgICAgIHRoaXMucmVuZGVyRHhmRmlsZShmaWxlKTsKICAgIH0sCiAgICByZW5kZXJEeGZGaWxlKGJsb2IpIHsKICAgICAgLy8gQXNzdW1pbmcgeW91IGhhdmUgYSByZWZlcmVuY2UgdG8gdGhlIER4ZlZpZXdlciBjb21wb25lbnQgbmFtZWQgImR4ZlZpZXdlciIKICAgICAgLy8gTG9hZCB0aGUgRFhGIGZpbGUgY29udGVudCBpbnRvIHRoZSBEeGZWaWV3ZXIKICAgICAgdGhpcy4kcmVmcy5keGZWaWV3ZXIuTG9hZChibG9iKTsKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZvbnRzID0gW21haW5Gb250LCBhdXgxRm9udCwgYXV4MkZvbnQsIGF1eDNGb250XTsKICAgIHRoaXMuJHBhcmVudC4kb24oJ2ZpbGUtc2VsZWN0ZWQnLCB0aGlzLmhhbmRsZUZpbGVTZWxlY3RlZCk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gUmVtb3ZlIGV2ZW50IGxpc3RlbmVyIHRvIHByZXZlbnQgbWVtb3J5IGxlYWtzCiAgICB0aGlzLiRwYXJlbnQuJG9mZignZmlsZS1zZWxlY3RlZCcsIHRoaXMuaGFuZGxlRmlsZVNlbGVjdGVkKTsKICB9Cn07"},{"version":3,"names":["DxfViewer","_DxfViewer","Vue","mainFont","aux1Font","aux2Font","aux3Font","LayersList","DataTable","axios","Connections","name","components","props","dxfUrl","type","String","uploadedFile","Object","data","layers","fonts","uploadedFileContent","filenamenew","inspectionReportNumber","projectNumber","projectName","group","partNumber","partName","methods","_OnLoaded","$refs","viewer","GetViewer","GetLayers","forEach","lyr","set","fileInput","document","querySelector","files","length","console","error","uploadAndParseFile","$emit","log","handleSubmitData","onSubmitDataTable","dataToSubmit","handleEnteredValues","inspection_report_number","project_number","project_name","part_number","part_name","_OnCleared","_OnToggleLayer","layer","newState","isVisible","ShowLayer","_OnToggleAll","_handleDxfHandleClickDxf","handle","ChangeDimensionColor","_handleDataTableHandleClick","ChangeHandleColor","_OnMessage","e","detail","level","MessageLevel","WARN","ERROR","$q","notify","message","formData","FormData","append","response","post","headers","handleDxfFileLoaded","handleFileSelected","file","renderDxfFile","blob","dxfViewer","Load","created","$parent","$on","beforeDestroy","$off"],"sources":["src/components/ViewerPage.vue"],"sourcesContent":["<template>\r\n  <q-page class=\"page-wrapper row items-stretch root\">\r\n <!-- Left Card for DxfViewer -->\r\n <q-card class=\"col-auto\" style=\"width: 1216px; height: 780px;\">\r\n   <q-card-section style=\" height: 739px;\">\r\n     <slot></slot> <!-- Include the slot here -->\r\n     <DxfViewer  ref=\"viewer\" :dxfUrl=\"dxfUrl\" :fonts=\"fonts\" @dxf-loaded=\"_OnLoaded\" @dxf-cleared=\"_OnCleared\" @dxf-message=\"_OnMessage\" />\r\n   </q-card-section>\r\n </q-card>\r\n\r\n <!-- Center Card for LayersList -->\r\n <!-- <q-card class=\"col-auto\" style=\"width: 300px;height: 780px; \">\r\n   <q-card-section style=\"height: 780px;\">\r\n     <LayersList :layers=\"layers\" @toggleLayer=\"_OnToggleLayer\" @toggleAll=\"_OnToggleAll\" />\r\n   </q-card-section>\r\n </q-card> -->\r\n\r\n <!-- Right Card for DataTable -->\r\n <q-card class=\"col-auto\" style=\"width: 700px;height: 780px;\">\r\n   <q-card-section style=\"height: 780px;\">\r\n     <DataTable v-if=\"uploadedFileContent\" :uploadedFileContent=\"uploadedFileContent\" :fileName=\"uploadedFile.name\" @set-data=\"onSubmitDataTable\" @save-request=\"handleSubmitData\"  @dataToSubmit=\"handleEnteredValues\" :uploadedFileContentnew=\"this.filenamenew\"/>\r\n   </q-card-section>\r\n </q-card>\r\n\r\n<!-- <connections style=\"height: 80px;\" @submit-data=\"handleSubmitData\" @save-request=\"handleSubmitData\"   /> -->\r\n\r\n<!---Set data WORKING-->\r\n<!-- <connections style=\"height: 80px;\" @save-request=\"handleSubmitData\"/> -->\r\n<connections :uploadedFileContentnew=\"this.filenamenew\" style=\"height: 80px;\"\r\n/>\r\n\r\n</q-page>\r\n</template>\r\n\r\n<script>\r\nimport DxfViewer from \"@/components/DxfViewer\";\r\nimport { DxfViewer as _DxfViewer } from \"dxf-viewer\";\r\nimport Vue from \"vue\";\r\nimport mainFont from \"@/assets/fonts/Roboto-LightItalic.ttf\";\r\nimport aux1Font from \"@/assets/fonts/NotoSansDisplay-SemiCondensedLightItalic.ttf\";\r\nimport aux2Font from \"@/assets/fonts/HanaMinA.ttf\";\r\nimport aux3Font from \"@/assets/fonts/NanumGothic-Regular.ttf\";\r\nimport LayersList from \"@/components/LayersList\";\r\nimport DataTable from \"@/components/DataTable\";\r\nimport axios from 'axios';\r\nimport Connections from './Connections.vue';\r\n\r\nexport default {\r\n name: \"ViewerPage\",\r\n components: { LayersList, DxfViewer, DataTable,Connections },\r\n\r\n props: {\r\n dxfUrl: {\r\n     type: String,\r\n     uploadedFile: Object,\r\n\r\n   },\r\n },\r\n\r\n data() {\r\n   return {\r\n     layers: null,\r\n     fonts: [],\r\n     uploadedFileContent: null, // Add a variable to hold uploaded file content\r\n     filenamenew: \"p1000\",\r\n     inspectionReportNumber: '', // Additional field\r\n   projectNumber: '', // Additional field\r\n   projectName: '', // Additional field\r\n   group: '', // Additional field\r\n   partNumber: '', // Additional field\r\n   partName: '' // Additional field\r\n     \r\n   };\r\n },\r\n\r\n methods: {\r\n   _OnLoaded() {\r\n     const layers = this.$refs.viewer.GetViewer().GetLayers();\r\n     layers.forEach((lyr) => Vue.set(lyr, \"isVisible\", true));\r\n     this.layers = layers;\r\n     const fileInput = document.querySelector('input[type=\"file\"]'); // Assuming you have only one file input\r\n\r\n      if (fileInput && fileInput.files.length > 0) {\r\n      // Get the uploaded file data\r\n      this.uploadedFile = fileInput.files[0];\r\n\r\n      } else {\r\n      console.error('No file uploaded or file input not found.');\r\n      }\r\n      this.uploadAndParseFile();\r\n      this.$emit('dxf-file-loaded', this.uploadedFileContent);\r\n      console.log(\"ViewerPage Selected filename:\", this.uploadedFile.name);\r\n      this.filenamenew = this.uploadedFile.name\r\n\r\n      this.$emit('file-loaded', this.uploadedFile.name);\r\n    },\r\nhandleSubmitData(data) {\r\n   //Log the selected file name and table data in the console\r\n   // console.log(\"working\");\r\n   this.$emit('submit-data', data);\r\n },\r\n onSubmitDataTable(dataToSubmit){\r\n  console.log(dataToSubmit);\r\n    console.log('Data to be submitted:', dataToSubmit); // Add this line for debugging\r\n    this.$emit('submit-data', dataToSubmit);\r\n },\r\n\r\n handleEnteredValues(data) {\r\n    const dataToSubmit = {\r\n    inspection_report_number: this.inspectionReportNumber,\r\n    project_number: this.projectNumber,\r\n    project_name: this.projectName,\r\n    group: this.group,\r\n    part_number: this.partNumber,\r\n    part_name: this.partName,\r\n    uploadedFileContent: data\r\n    };\r\n    console.log('Data to be submitted:', dataToSubmit); // Add this line for debugging\r\n    this.$emit('submit-data', dataToSubmit);\r\n    console.log('Entered values from DataTable:', dataToSubmit); // Ensure this line is correctly placed\r\n},\r\n\r\n\r\n\r\n   _OnCleared() {\r\n     this.layers = null;\r\n     this.uploadedFileContent = ''; // Clear uploaded file content when cleared\r\n   },\r\n\r\n   _OnToggleLayer(layer, newState) {\r\n     layer.isVisible = newState;\r\n     this.$refs.viewer.GetViewer().ShowLayer(layer.name, newState);\r\n   },\r\n\r\n   _OnToggleAll(newState) {\r\n     if (this.layers) {\r\n       for (const layer of this.layers) {\r\n         if (layer.isVisible !== newState) {\r\n           this._OnToggleLayer(layer, newState);\r\n         }\r\n       }\r\n     }\r\n   },\r\n   _handleDxfHandleClickDxf(handle) {\r\n   // Change the color of the corresponding dimension in the DXF diagram\r\n   this.$refs.viewer.GetViewer().ChangeDimensionColor(handle, \"#ff0000\");\r\n },\r\n\r\n\r\n _handleDataTableHandleClick(handle) {\r\n   // Handle the click event from DataTable\r\n   // For example, update the color of the clicked handle in the DxfViewer component\r\n   this.$refs.viewer.GetViewer().ChangeHandleColor(handle, \"#ff0000\");\r\n },\r\n   _OnMessage(e) {\r\n     let type = \"info\";\r\n     switch (e.detail.level) {\r\n       case _DxfViewer.MessageLevel.WARN:\r\n         type = \"warning\";\r\n         break;\r\n       case _DxfViewer.MessageLevel.ERROR:\r\n         type = \"negative\";\r\n         break;\r\n     }\r\n     this.$q.notify({ type, message: e.detail.message });\r\n   },\r\n\r\n\r\n       // Add a new function to handle file upload and send it to the backend\r\n async uploadAndParseFile() {\r\n   const fileInput = document.querySelector('input[type=\"file\"]');\r\n   if (!fileInput || fileInput.files.length === 0) {\r\n     console.error('No file uploaded or file input not found.');\r\n     return;\r\n   }\r\n\r\n   const formData = new FormData();\r\n   formData.append('file', fileInput.files[0]);\r\n   try {\r\n     // Send the file to the backend using Axios\r\n     const response = await axios.post('http://172.18.100.240:9999/parse_dxf/', formData, {\r\n       headers: {\r\n         'Content-Type': 'multipart/form-data',\r\n       },\r\n     });\r\n     this.uploadedFileContent = response.data;\r\n   } catch (error) {\r\n     console.error('Error uploading and parsing file:', error);\r\n   }\r\n },\r\n handleDxfFileLoaded(data) {\r\n         // Update uploadedFileContent when the DXF file is loaded\r\n         this.uploadedFileContent = data;\r\n     },\r\n     handleFileSelected(file) {\r\n   // Render the DXF file in the viewer\r\n   // Assuming you have a method to render DXF files\r\n   this.renderDxfFile(file);\r\n },\r\n renderDxfFile(blob) {\r\n // Assuming you have a reference to the DxfViewer component named \"dxfViewer\"\r\n // Load the DXF file content into the DxfViewer\r\n this.$refs.dxfViewer.Load(blob);\r\n}\r\n },\r\n\r\n created() {\r\n   this.fonts = [mainFont, aux1Font, aux2Font, aux3Font];\r\n   this.$parent.$on('file-selected', this.handleFileSelected);\r\n },\r\n beforeDestroy() {\r\n // Remove event listener to prevent memory leaks\r\n this.$parent.$off('file-selected', this.handleFileSelected);\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n\r\n.page-wrapper {\r\nwidth: 100%; /* Set width to fill the viewport */\r\nheight: 90vh; /* Set height to fill the viewport height */\r\noverflow: hidden; /* Prevent scrolling */\r\n}\r\n.root {\r\n .layersCol {\r\n   border-left: #DBDBDB solid 1px;\r\n }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}