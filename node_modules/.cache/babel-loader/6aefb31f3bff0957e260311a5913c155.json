{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\LinearDimension.js","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\LinearDimension.js","mtime":1704432456000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\babel.config.js","mtime":1694764762000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vector2","Matrix3","ParseSpecialChars","DimensionLayout","constructor","lines","triangles","texts","AddLine","start","end","color","push","AddTriangles","vertices","indices","AddText","text","size","angle","position","arrowHeadShape","LinearDimension","params","styleResolver","textWidthCalculator","isValid","_CalculateGeometry","IsValid","GetTexts","_GetText","GenerateLayout","_this$styleResolver","_this$styleResolver2","_this$styleResolver3","_this$styleResolver4","_this$styleResolver5","_this$params$textRota","_this$styleResolver6","_this$styleResolver7","_this$styleResolver8","_this$styleResolver9","result","dimSize","d1","distanceTo","d2","dimColor","dimScale","fontSize","textWidth","textColor","arrowSize","tickSize","textAnchor","flipArrows","clone","dimExt","add","vDim","multiplyScalar","vDimNorm","Math","PI","textRotation","extColor","extOffset","extExt","DrawExtLine","basePt","dimPt","vExt","sub","dist","length","normalize","p1","p2","i","flip","transform","identity","scale","rotate","translate","x","y","_CreateTick","_CreateArrowShape","layout","v","applyMatrix3","vBase","isAligned","_this$params$angle","cos","sin","anchor","dot","copy","_this$params$text","_this$styleResolver10","_this$styleResolver11","_this$styleResolver12","_this$styleResolver13","_this$styleResolver14","_this$styleResolver15","_this$params$text2","indexOf","measurement","rnd","n","round","zeroSupp","leadZeroSupp","trailingZeroSupp","measText","toFixed","replace","startsWith","endsWith","substring","decSep","isNaN","String","fromCharCode","suffix","replaceAll"],"sources":["C:/Users/SDC-8/Desktop/Sowndarya/CMTI ALL PROJECTS/SmartMetrology/smart-frontend/node_modules/dxf-viewer/src/LinearDimension.js"],"sourcesContent":["import {Vector2, Matrix3} from \"three\"\nimport { ParseSpecialChars } from \"./TextRenderer\"\n\n/**\n * @property {{color: ?number, start: Vector2, end: Vector2}[]} lines\n * @property {{color: ?number, vertices: Vector2[]}[], indices: number[]} triangles On or more\n *  triangles in each item.\n * @property {{text: string, size: number, angle: number, color: number, position: Vector2}[]} texts\n *   Each item position is specified as middle point of the rendered text.\n */\nexport class DimensionLayout {\n    constructor() {\n        this.lines = []\n        this.triangles = []\n        this.texts = []\n    }\n\n    AddLine(start, end, color = null) {\n        this.lines.push({start, end, color})\n    }\n\n    /** Add one or more triangles. */\n    AddTriangles(vertices, indices, color = null) {\n        this.triangles.push({vertices, indices, color})\n    }\n\n    AddText(text, size, angle, color, position) {\n        this.texts.push({text, size, angle, color, position})\n    }\n}\n\nconst arrowHeadShape = {\n    vertices: [\n        new Vector2(0, 0),\n        new Vector2(1, -0.25),\n        new Vector2(1, 0.25)\n    ],\n    indices: [0, 1, 2]\n}\n\n/** Encapsulates all calculations about linear dimensions layout. */\nexport class LinearDimension {\n\n    /**\n     * @typedef LinearDimensionParams\n     * @property {Vector2} p1 First definition point.\n     * @property {Vector2} p2 Second definition point.\n     * @property {Vector2} anchor Anchor point defines dimension line location.\n     * @property {?number} angle Rotation angle for rotated dimension, deg.\n     * @property {boolean} isAligned Dimension line is parallel to base line for aligned dimension.\n     * @property {?string} text Dimension text pattern.\n     * @property {?Vector2} textAnchor Text location (middle point) override.\n     * @property {?number} textRotation Rotation angle of the dimension text away from its default\n     *  orientation (the direction of the dimension line)\n     */\n\n    /**\n     * @param {LinearDimensionParams} params\n     * @param {Function<any(string)>} styleResolver Provides value for a requested style parameter.\n     * @param {Function<number(string, number)>} textWidthCalculator Get text width in model space\n     *  units for a given text and font size (height).\n     */\n    constructor(params, styleResolver, textWidthCalculator) {\n        this.params = params\n        this.styleResolver = styleResolver\n        this.textWidthCalculator = textWidthCalculator\n        /* Can be set to indicate some invalid geometric solution.  */\n        this.isValid = true\n        this._CalculateGeometry()\n    }\n\n    IsValid() {\n        return this.isValid\n    }\n\n    GetTexts() {\n        return [this._GetText()]\n    }\n\n    /**\n     * @return {DimensionLayout}\n     */\n    GenerateLayout() {\n        /* See https://ezdxf.readthedocs.io/en/stable/tables/dimstyle_table_entry.html */\n        const result = new DimensionLayout()\n\n        /* Dimension line(s). */\n        const dimSize = this.d1.distanceTo(this.d2)\n        const dimColor = this.styleResolver(\"DIMCLRD\")\n        let dimScale = this.styleResolver(\"DIMSCALE\") ?? 1\n        if (dimScale == 0) {\n            /* No any auto calculation implemented, since no support for paper space. */\n            dimScale = 1\n        }\n\n        const text = this._GetText()\n        const fontSize = (this.styleResolver(\"DIMTXT\") ?? 1) * dimScale\n        const textWidth = this.textWidthCalculator(text, fontSize)\n        const textColor = this.styleResolver(\"DIMCLRT\")\n        const arrowSize = (this.styleResolver(\"DIMASZ\") ?? 1) * dimScale\n        const tickSize = (this.styleResolver(\"DIMTSZ\") ?? 0) * dimScale\n\n        let textAnchor = this.params.textAnchor\n        let flipArrows = false\n\n        const start = this.d1.clone()\n        const dimExt = (this.styleResolver(\"DIMDLE\") ?? 0) * dimScale\n        if (dimExt != 0) {\n            start.add(this.vDim.clone().multiplyScalar(-dimExt))\n        }\n        const end = this.d2.clone()\n        if (dimExt != 0) {\n            end.add(this.vDim.clone().multiplyScalar(dimExt))\n        }\n        result.AddLine(start, end, dimColor)\n\n        if (dimSize < arrowSize * 2) {\n            flipArrows = true\n        }\n\n        if (!textAnchor) {\n            //XXX for now just always draw the text above dimension line with fixed gap\n            textAnchor = this.vDim.clone().multiplyScalar(this.d1.distanceTo(this.d2) / 2)\n                .add(this.d1).add(this.vDimNorm.clone().multiplyScalar(fontSize * 0.75))\n        }\n        const angle = this.vDimNorm.angle() * 180 / Math.PI - 90 +\n            (this.params.textRotation ?? 0)\n        result.AddText(text, fontSize, angle, textColor, textAnchor)\n\n\n        /* Extension lines. */\n        const extColor = this.styleResolver(\"DIMCLRE\")\n        const extOffset = (this.styleResolver(\"DIMEXO\") ?? 0) * dimScale\n        const extExt = (this.styleResolver(\"DIMEXE\") ?? 0) * dimScale\n\n        const DrawExtLine = (basePt, dimPt) => {\n            const vExt = dimPt.clone().sub(basePt)\n            const dist = vExt.length()\n            if (dist == 0) {\n                return\n            }\n            vExt.normalize()\n            const start = basePt.clone()\n            if (extOffset != 0) {\n                start.add(vExt.clone().multiplyScalar(extOffset))\n            }\n            const end = dimPt.clone()\n            if (extExt != 0) {\n                end.add(vExt.clone().multiplyScalar(extExt))\n            }\n            result.AddLine(start, end, extColor)\n        }\n\n        if (!(this.styleResolver(\"DIMSE1\") ?? 0)) {\n            DrawExtLine(this.params.p1, this.d1)\n        }\n        if (!(this.styleResolver(\"DIMSE2\") ?? 0)) {\n            DrawExtLine(this.params.p2, this.d2)\n        }\n\n        /* Draw arrows (or anything defined as dimension shape). Assuming shape is defined\n         * horizontally for left side with the origin in the dimension point, scale corresponding to\n         * size 1. Calculate appropriate transform for the shape.\n         */\n        //XXX check suppression by DIMSOXD, DIMSD1, DIMSD2\n        for (let i = 0; i < 2; i++) {\n            const dimPt = i == 0 ? this.d1 : this.d2\n            let flip = i == 1\n            if (flipArrows) {\n                flip = !flip\n            }\n\n            let transform = new Matrix3().identity()\n            if (tickSize > 0) {\n                transform.scale(tickSize, tickSize)\n            } else {\n                transform.scale(arrowSize, arrowSize)\n                /* Tick is not flipped. */\n                if (flip) {\n                    transform.scale(-1, 1)\n                }\n            }\n\n            const angle = -this.vDim.angle()\n            transform.rotate(angle)\n\n            transform.translate(dimPt.x, dimPt.y)\n\n            if (tickSize > 0) {\n                this._CreateTick(result, transform, dimColor)\n            } else {\n                this._CreateArrowShape(result, transform, dimColor)\n            }\n        }\n\n        return result\n    }\n\n    _CreateArrowShape(layout, transform, color) {\n        const vertices = []\n        for (const v of arrowHeadShape.vertices) {\n            vertices.push(v.clone().applyMatrix3(transform))\n        }\n        layout.AddTriangles(vertices, arrowHeadShape.indices, color)\n    }\n\n    _CreateTick(layout, transform, color) {\n        layout.AddLine(new Vector2(0.5, 0.5).applyMatrix3(transform),\n                       new Vector2(-0.5, -0.5).applyMatrix3(transform),\n                       color)\n    }\n\n    /** Calculate and set basic geometric parameters (some points and vectors which define the\n     * dimension layout).\n     */\n    _CalculateGeometry() {\n        /* Base vector. */\n        this.vBase = this.params.p2.clone().sub(this.params.p1).normalize()\n\n        /* Dimension vector. */\n        if (this.params.isAligned) {\n            this.vDim = this.vBase\n        } else {\n            /* Angle is defined as angle between X axis and dimension line (CCW is positive). */\n            const angle = (this.params.angle ?? 0) * Math.PI / 180\n            this.vDim = new Vector2(Math.cos(angle), Math.sin(angle))\n        }\n\n        /* Dimension points. Calculate them by projecting base points to dimension line. */\n        this.d1 = this.vDim.clone().multiplyScalar(\n            /* Projected signed length. */\n            this.params.p1.clone().sub(this.params.anchor).dot(this.vDim))\n            .add(this.params.anchor)\n        this.d2 = this.vDim.clone().multiplyScalar(\n            /* Projected signed length. */\n            this.params.p2.clone().sub(this.params.anchor).dot(this.vDim))\n            .add(this.params.anchor)\n\n        if (this.d1.distanceTo(this.d2) == 0) {\n            this.isValid = false\n        }\n\n        /* Ensure dimension vector still points from d1 to d2 after rotation. */\n        this.vDim.copy(this.d2).sub(this.d1).normalize()\n\n        /* Dimension normal vector is perpendicular to dimension line and is either above or on its\n         * left side.\n         * 90deg rotated vector is either [y; -x] or [-y; x]. Select most suitable from them\n         * (y > x).\n         */\n        if (this.vDim.y < -this.vDim.x) {\n            this.vDimNorm = new Vector2(this.vDim.y, -this.vDim.x)\n        } else {\n            this.vDimNorm = new Vector2(-this.vDim.y, this.vDim.x)\n        }\n    }\n\n    _GetText() {\n        if (this.params.text == \" \") {\n            /* Space indicates empty text. */\n            return \"\"\n        }\n        if ((this.params.text ?? \"\") != \"\" && this.params.text.indexOf(\"<>\") == -1) {\n            /* No value placeholder, just return the text. */\n            return ParseSpecialChars(this.params.text)\n        }\n\n        let measurement = this.d2.distanceTo(this.d1)\n        measurement *= this.styleResolver(\"DIMLFAC\") ?? 1\n\n        const rnd = this.styleResolver(\"DIMRND\") ?? 0\n        if (rnd > 0) {\n            const n = Math.round(measurement / rnd)\n            measurement = rnd * n\n        }\n\n        const zeroSupp = this.styleResolver(\"DIMZIN\") ?? 0\n        const leadZeroSupp = (zeroSupp & 4) != 0\n        const trailingZeroSupp = (zeroSupp & 8) != 0\n\n        let measText = measurement.toFixed(this.styleResolver(\"DIMDEC\") ?? 2)\n\n        if (trailingZeroSupp) {\n            measText = measText.replace(/.0+$/, \"\")\n        }\n\n        if (leadZeroSupp) {\n            measText = measText.replace(/^0+/, \"\")\n        }\n\n        if (measText.startsWith(\".\")) {\n            measText = \"0\" + measText\n        } else if (measText == \"\") {\n            measText = \"0\"\n        }\n        if (measText.endsWith(\".\")) {\n            measText = measText.substring(0, measText.length - 1)\n        }\n\n        let decSep = this.styleResolver(\"DIMDSEP\") ?? \".\"\n        if (!isNaN(decSep)) {\n            decSep = String.fromCharCode(decSep)\n        }\n        if (decSep != \".\") {\n            measText = measText.replace(\".\", decSep)\n        }\n\n        const suffix = this.styleResolver(\"DIMPOST\") ?? \"\"\n        if (suffix != \"\") {\n            if (suffix.indexOf(\"<>\") != -1) {\n                measText = suffix.replaceAll(\"<>\", measText)\n            } else {\n                measText += suffix\n            }\n        }\n\n        if ((this.params.text ?? \"\") != \"\") {\n            measText = this.params.text.replaceAll(\"<>\", measText)\n        }\n\n        return ParseSpecialChars(measText)\n    }\n}\n"],"mappings":"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"}]}