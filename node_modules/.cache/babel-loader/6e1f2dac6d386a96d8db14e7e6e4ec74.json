{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\DxfWorker.js","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\DxfWorker.js","mtime":1704432456000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\babel.config.js","mtime":1694764762000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DxfFetcher","DxfScene","opentype","MSG_SIGNATURE","DxfWorker","constructor","worker","isWorker","onmessage","_ProcessRequest","bind","addEventListener","_ProcessResponse","_OnError","reqSeq","requests","Map","progressCbk","Load","url","fonts","options","_SendRequest","WorkerMsg","LOAD","_CloneOptions","_Load","Destroy","noWait","DESTROY","terminate","event","msg","data","signature","console","log","resp","seq","type","transfers","_ProcessRequestMessage","error","String","postMessage","close","scene","dxf","phase","size","totalSize","_SendProgress","push","vertices","indices","transforms","req","get","PROGRESS","delete","hasOwnProperty","SetError","SetResponse","reqs","Array","from","values","clear","forEach","Request","set","GetResponse","fontFetchers","_CreateFontFetchers","fileEncoding","Fetch","dxfScene","Build","retainParsedDxf","undefined","urls","CreateFetcher","fetch","then","response","arrayBuffer","parse","fetchers","isArray","map","o","result","propName","promise","Promise","resolve","reject","_Resolve","_Reject"],"sources":["C:/Users/SDC-8/Desktop/Sowndarya/CMTI ALL PROJECTS/SmartMetrology/smart-frontend/node_modules/dxf-viewer/src/DxfWorker.js"],"sourcesContent":["import {DxfFetcher} from \"./DxfFetcher\"\nimport {DxfScene} from \"./DxfScene\"\nimport opentype from \"opentype.js\"\n\nconst MSG_SIGNATURE = \"DxfWorkerMsg\"\n\n/** Wraps web-worker instance and provides unified interface to its services, including the when\n * web-worker is not used and all heavy operations are performed in main thread.\n */\nexport class DxfWorker {\n    /** @param worker Web worker instance with DxfViewer.SetupWorker() function called. Can be null\n     *  for synchronous operations.\n     *  @param isWorker True for worker-side wrapper.\n     */\n    constructor(worker, isWorker = false) {\n        this.worker = worker\n        if (isWorker) {\n            worker.onmessage = this._ProcessRequest.bind(this)\n        } else if (worker) {\n            worker.addEventListener(\"message\", this._ProcessResponse.bind(this), false)\n            worker.addEventListener(\"error\", this._OnError.bind(this), false)\n            this.reqSeq = 1\n            /* Indexed by sequence. */\n            this.requests = new Map()\n            this.progressCbk = null\n        }\n    }\n\n    /**\n     * @param url DXF file URL.\n     * @param fonts {?string[]} Fonts URLs.\n     * @param options Viewer options. See DxfViewer.DefaultOptions.\n     * @param progressCbk {Function?} (phase, processedSize, totalSize)\n     */\n    async Load(url, fonts, options, progressCbk) {\n        if (this.worker) {\n            return this._SendRequest(DxfWorker.WorkerMsg.LOAD,\n                                     { url, fonts, options: this._CloneOptions(options) },\n                                     progressCbk)\n        } else {\n            return this._Load(url, fonts, options, progressCbk)\n        }\n    }\n\n    async Destroy(noWait = false) {\n        if (this.worker) {\n            if (!noWait) {\n                await this._SendRequest(DxfWorker.WorkerMsg.DESTROY)\n            }\n            /* close() in the worker is not enough, instance is still visible in dev tools. */\n            this.worker.terminate()\n        }\n    }\n\n    async _ProcessRequest(event) {\n        const msg = event.data\n        if (msg.signature !== MSG_SIGNATURE) {\n            console.log(\"Message with bad signature\", msg)\n            return\n        }\n        const resp = {seq: msg.seq, type: msg.type, signature: MSG_SIGNATURE}\n        const transfers = []\n        try {\n            resp.data = await this._ProcessRequestMessage(msg.type, msg.data, transfers, msg.seq)\n        } catch (error) {\n            console.error(error)\n            resp.error = String(error)\n        }\n        this.worker.postMessage(resp, transfers)\n        if (msg.type === DxfWorker.WorkerMsg.DESTROY) {\n            this.worker.onmessage = null\n            this.worker.close()\n            this.worker = null\n        }\n    }\n\n    async _ProcessRequestMessage(type, data, transfers, seq) {\n        switch (type) {\n        case DxfWorker.WorkerMsg.LOAD: {\n            const {scene, dxf} = await this._Load(\n                data.url,\n                data.fonts,\n                data.options,\n                (phase, size, totalSize) => this._SendProgress(seq, phase, size, totalSize))\n            transfers.push(scene.vertices)\n            transfers.push(scene.indices)\n            transfers.push(scene.transforms)\n            return {scene, dxf}\n        }\n        case DxfWorker.WorkerMsg.DESTROY:\n            return null\n        default:\n            throw \"Unknown message type: \" + type\n        }\n    }\n\n    async _ProcessResponse(event) {\n        const msg = event.data\n        if (msg.signature !== MSG_SIGNATURE) {\n            console.log(\"Message with bad signature\", msg)\n            return\n        }\n        const seq = msg.seq\n        const req = this.requests.get(seq)\n        if (!req) {\n            console.error(\"Unmatched message sequence: \", seq)\n            return\n        }\n        const data = msg.data\n        if (msg.type === DxfWorker.WorkerMsg.PROGRESS && req.progressCbk) {\n            req.progressCbk(data.phase, data.size, data.totalSize)\n            return\n        }\n        this.requests.delete(seq)\n        if (msg.hasOwnProperty(\"error\")) {\n            req.SetError(msg.error)\n        } else {\n            req.SetResponse(data)\n        }\n    }\n\n    async _OnError(error) {\n        console.error(\"DxfWorker worker error\", error)\n        const reqs = Array.from(this.requests.values)\n        this.requests.clear()\n        reqs.forEach(req => req.SetError(error))\n    }\n\n    async _SendRequest(type, data = null, progressCbk = null) {\n        const seq = this.reqSeq++\n        const req = new DxfWorker.Request(seq, progressCbk)\n        this.requests.set(seq, req)\n        this.worker.postMessage({ seq, type, data, signature: MSG_SIGNATURE})\n        return await req.GetResponse()\n    }\n\n    _SendProgress(seq, phase, size, totalSize) {\n        this.worker.postMessage({\n            seq,\n            type: DxfWorker.WorkerMsg.PROGRESS,\n            data: {phase, size, totalSize},\n            signature: MSG_SIGNATURE\n        })\n    }\n\n    /** @return {Object} DxfScene serialized scene. */\n    async _Load(url, fonts, options, progressCbk) {\n        let fontFetchers\n        if (fonts) {\n            fontFetchers = this._CreateFontFetchers(fonts, progressCbk)\n        } else {\n            fontFetchers = []\n        }\n        const dxf = await new DxfFetcher(url, options.fileEncoding).Fetch(progressCbk)\n        if (progressCbk) {\n            progressCbk(\"prepare\", 0, null)\n        }\n        const dxfScene = new DxfScene(options)\n        await dxfScene.Build(dxf, fontFetchers)\n        return {scene: dxfScene.scene, dxf: options.retainParsedDxf === true ? dxf : undefined }\n    }\n\n    _CreateFontFetchers(urls, progressCbk) {\n\n        function CreateFetcher(url) {\n            return async function() {\n                if (progressCbk) {\n                    progressCbk(\"font\", 0, null)\n                }\n                const data = await fetch(url).then(response => response.arrayBuffer())\n                if (progressCbk) {\n                    progressCbk(\"prepare\", 0, null)\n                }\n                return opentype.parse(data)\n            }\n        }\n\n        const fetchers = []\n        for (const url of urls) {\n            fetchers.push(CreateFetcher(url))\n        }\n        return fetchers\n    }\n\n    _CloneOptions(options) {\n        /* Default options values are taken from prototype so need to implement deep clone here. */\n        if (Array.isArray(options)) {\n            return options.map(o => this._CloneOptions(o))\n        } else if (typeof options === \"object\" && options !== null) {\n            const result = {}\n            for (const propName in options) {\n                // noinspection JSUnfilteredForInLoop\n                result[propName] = this._CloneOptions(options[propName])\n            }\n            return result\n        } else {\n            return options\n        }\n    }\n}\n\nDxfWorker.WorkerMsg = {\n    LOAD: \"LOAD\",\n    PROGRESS: \"PROGRESS\",\n    DESTROY: \"DESTROY\"\n}\n\nDxfWorker.Request = class {\n    constructor(seq, progressCbk) {\n        this.seq = seq\n        this.progressCbk = progressCbk\n        this.promise = new Promise((resolve, reject) => {\n            this._Resolve = resolve\n            this._Reject = reject\n        })\n    }\n\n    async GetResponse() {\n        return await this.promise\n    }\n\n    SetResponse(response) {\n        this._Resolve(response)\n    }\n\n    SetError(error) {\n        this._Reject(error)\n    }\n}\n"],"mappings":"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"}]}