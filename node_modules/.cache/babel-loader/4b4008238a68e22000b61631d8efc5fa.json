{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\parser\\entities\\polyline.js","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\parser\\entities\\polyline.js","mtime":1704432456000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\babel.config.js","mtime":1694764762000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI ALL PROJECTS\\GERB-INDIA(CLIENT)\\GerbIndiaDashboard-CMTI-Full\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgaGVscGVycyBmcm9tICcuLi9QYXJzZUhlbHBlcnMnOwppbXBvcnQgVmVydGV4UGFyc2VyIGZyb20gJy4vdmVydGV4JzsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRW50aXR5UGFyc2VyKCkge30KRW50aXR5UGFyc2VyLkZvckVudGl0eU5hbWUgPSAnUE9MWUxJTkUnOwpFbnRpdHlQYXJzZXIucHJvdG90eXBlLnBhcnNlRW50aXR5ID0gZnVuY3Rpb24gKHNjYW5uZXIsIGN1cnIpIHsKICB2YXIgZW50aXR5ID0gewogICAgdHlwZTogY3Vyci52YWx1ZSwKICAgIHZlcnRpY2VzOiBbXQogIH07CiAgY3VyciA9IHNjYW5uZXIubmV4dCgpOwogIHdoaWxlIChjdXJyICE9PSAnRU9GJykgewogICAgaWYgKGN1cnIuY29kZSA9PT0gMCkgYnJlYWs7CiAgICBzd2l0Y2ggKGN1cnIuY29kZSkgewogICAgICBjYXNlIDEwOgogICAgICAgIC8vIGFsd2F5cyAwCiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMjA6CiAgICAgICAgLy8gYWx3YXlzIDAKICAgICAgICBicmVhazsKICAgICAgY2FzZSAzMDoKICAgICAgICAvLyBlbGV2YXRpb24KICAgICAgICBicmVhazsKICAgICAgY2FzZSAzOToKICAgICAgICAvLyB0aGlja25lc3MKICAgICAgICBlbnRpdHkudGhpY2tuZXNzID0gY3Vyci52YWx1ZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSA0MDoKICAgICAgICAvLyBzdGFydCB3aWR0aAogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDQxOgogICAgICAgIC8vIGVuZCB3aWR0aAogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDcwOgogICAgICAgIGVudGl0eS5zaGFwZSA9IChjdXJyLnZhbHVlICYgMSkgIT09IDA7CiAgICAgICAgZW50aXR5LmluY2x1ZGVzQ3VydmVGaXRWZXJ0aWNlcyA9IChjdXJyLnZhbHVlICYgMikgIT09IDA7CiAgICAgICAgZW50aXR5LmluY2x1ZGVzU3BsaW5lRml0VmVydGljZXMgPSAoY3Vyci52YWx1ZSAmIDQpICE9PSAwOwogICAgICAgIGVudGl0eS5pczNkUG9seWxpbmUgPSAoY3Vyci52YWx1ZSAmIDgpICE9PSAwOwogICAgICAgIGVudGl0eS5pczNkUG9seWdvbk1lc2ggPSAoY3Vyci52YWx1ZSAmIDE2KSAhPT0gMDsKICAgICAgICBlbnRpdHkuaXMzZFBvbHlnb25NZXNoQ2xvc2VkID0gKGN1cnIudmFsdWUgJiAzMikgIT09IDA7IC8vIDMyID0gVGhlIHBvbHlnb24gbWVzaCBpcyBjbG9zZWQgaW4gdGhlIE4gZGlyZWN0aW9uCiAgICAgICAgZW50aXR5LmlzUG9seWZhY2VNZXNoID0gKGN1cnIudmFsdWUgJiA2NCkgIT09IDA7CiAgICAgICAgZW50aXR5Lmhhc0NvbnRpbnVvdXNMaW5ldHlwZVBhdHRlcm4gPSAoY3Vyci52YWx1ZSAmIDEyOCkgIT09IDA7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNzE6CiAgICAgICAgLy8gUG9seWdvbiBtZXNoIE0gdmVydGV4IGNvdW50CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNzI6CiAgICAgICAgLy8gUG9seWdvbiBtZXNoIE4gdmVydGV4IGNvdW50CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNzM6CiAgICAgICAgLy8gU21vb3RoIHN1cmZhY2UgTSBkZW5zaXR5CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNzQ6CiAgICAgICAgLy8gU21vb3RoIHN1cmZhY2UgTiBkZW5zaXR5CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNzU6CiAgICAgICAgLy8gQ3VydmVzIGFuZCBzbW9vdGggc3VyZmFjZSB0eXBlCiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMjEwOgogICAgICAgIGVudGl0eS5leHRydXNpb25EaXJlY3Rpb24gPSBoZWxwZXJzLnBhcnNlUG9pbnQoc2Nhbm5lcik7CiAgICAgICAgYnJlYWs7CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgaGVscGVycy5jaGVja0NvbW1vbkVudGl0eVByb3BlcnRpZXMoZW50aXR5LCBjdXJyLCBzY2FubmVyKTsKICAgICAgICBicmVhazsKICAgIH0KICAgIGN1cnIgPSBzY2FubmVyLm5leHQoKTsKICB9CiAgZW50aXR5LnZlcnRpY2VzID0gcGFyc2VQb2x5bGluZVZlcnRpY2VzKHNjYW5uZXIsIGN1cnIpOwogIHJldHVybiBlbnRpdHk7Cn07CmZ1bmN0aW9uIHBhcnNlUG9seWxpbmVWZXJ0aWNlcyhzY2FubmVyLCBjdXJyKSB7CiAgdmFyIHZlcnRleFBhcnNlciA9IG5ldyBWZXJ0ZXhQYXJzZXIoKTsKICB2YXIgdmVydGljZXMgPSBbXTsKICB3aGlsZSAoIXNjYW5uZXIuaXNFT0YoKSkgewogICAgaWYgKGN1cnIuY29kZSA9PT0gMCkgewogICAgICBpZiAoY3Vyci52YWx1ZSA9PT0gJ1ZFUlRFWCcpIHsKICAgICAgICB2ZXJ0aWNlcy5wdXNoKHZlcnRleFBhcnNlci5wYXJzZUVudGl0eShzY2FubmVyLCBjdXJyKSk7CiAgICAgICAgY3VyciA9IHNjYW5uZXIubGFzdFJlYWRHcm91cDsKICAgICAgfSBlbHNlIGlmIChjdXJyLnZhbHVlID09PSAnU0VRRU5EJykgewogICAgICAgIHBhcnNlU2VxRW5kKHNjYW5uZXIsIGN1cnIpOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CiAgfQogIHJldHVybiB2ZXJ0aWNlczsKfQo7CmZ1bmN0aW9uIHBhcnNlU2VxRW5kKHNjYW5uZXIsIGN1cnIpIHsKICB2YXIgZW50aXR5ID0gewogICAgdHlwZTogY3Vyci52YWx1ZQogIH07CiAgY3VyciA9IHNjYW5uZXIubmV4dCgpOwogIHdoaWxlIChjdXJyICE9ICdFT0YnKSB7CiAgICBpZiAoY3Vyci5jb2RlID09IDApIGJyZWFrOwogICAgaGVscGVycy5jaGVja0NvbW1vbkVudGl0eVByb3BlcnRpZXMoZW50aXR5LCBjdXJyLCBzY2FubmVyKTsKICAgIGN1cnIgPSBzY2FubmVyLm5leHQoKTsKICB9CiAgcmV0dXJuIGVudGl0eTsKfQo7"},{"version":3,"names":["helpers","VertexParser","EntityParser","ForEntityName","prototype","parseEntity","scanner","curr","entity","type","value","vertices","next","code","thickness","shape","includesCurveFitVertices","includesSplineFitVertices","is3dPolyline","is3dPolygonMesh","is3dPolygonMeshClosed","isPolyfaceMesh","hasContinuousLinetypePattern","extrusionDirection","parsePoint","checkCommonEntityProperties","parsePolylineVertices","vertexParser","isEOF","push","lastReadGroup","parseSeqEnd"],"sources":["C:/Users/SDC-8/Desktop/Sowndarya/CMTI ALL PROJECTS/GERB-INDIA(CLIENT)/GerbIndiaDashboard-CMTI-Full/SmartMetrology/smart-frontend/node_modules/dxf-viewer/src/parser/entities/polyline.js"],"sourcesContent":["\nimport * as helpers from '../ParseHelpers'\nimport VertexParser from './vertex';\n\nexport default function EntityParser() {}\n\nEntityParser.ForEntityName = 'POLYLINE';\n\nEntityParser.prototype.parseEntity = function(scanner, curr) {\n    var entity = { type: curr.value, vertices: [] };\n    curr = scanner.next();\n    while(curr !== 'EOF') {\n        if(curr.code === 0) break;\n\n        switch(curr.code) {\n        case 10: // always 0\n            break;\n        case 20: // always 0\n            break;\n        case 30: // elevation\n            break;\n        case 39: // thickness\n            entity.thickness = curr.value;\n            break;\n        case 40: // start width\n            break;\n        case 41: // end width\n            break;\n        case 70:\n            entity.shape = (curr.value & 1) !== 0;\n            entity.includesCurveFitVertices = (curr.value & 2) !== 0;\n            entity.includesSplineFitVertices = (curr.value & 4) !== 0;\n            entity.is3dPolyline = (curr.value & 8) !== 0;\n            entity.is3dPolygonMesh = (curr.value & 16) !== 0;\n            entity.is3dPolygonMeshClosed = (curr.value & 32) !== 0; // 32 = The polygon mesh is closed in the N direction\n            entity.isPolyfaceMesh = (curr.value & 64) !== 0;\n            entity.hasContinuousLinetypePattern = (curr.value & 128) !== 0;\n            break;\n        case 71: // Polygon mesh M vertex count\n            break;\n        case 72: // Polygon mesh N vertex count\n            break;\n        case 73: // Smooth surface M density\n            break;\n        case 74: // Smooth surface N density\n            break;\n        case 75: // Curves and smooth surface type\n            break;\n        case 210:\n            entity.extrusionDirection = helpers.parsePoint(scanner);\n            break;\n        default:\n            helpers.checkCommonEntityProperties(entity, curr, scanner);\n            break;\n        }\n        curr = scanner.next();\n    }\n\n    entity.vertices = parsePolylineVertices(scanner, curr);\n\n    return entity;\n};\n\nfunction parsePolylineVertices(scanner, curr) {\n    var vertexParser = new VertexParser();\n\n    var vertices = [];\n    while (!scanner.isEOF()) {\n        if (curr.code === 0) {\n            if (curr.value === 'VERTEX') {\n                vertices.push(vertexParser.parseEntity(scanner, curr));\n                curr = scanner.lastReadGroup;\n            } else if (curr.value === 'SEQEND') {\n                parseSeqEnd(scanner, curr);\n                break;\n            }\n        }\n    }\n    return vertices;\n};\n\nfunction parseSeqEnd(scanner, curr) {\n    var entity = { type: curr.value };\n    curr = scanner.next();\n    while(curr != 'EOF') {\n        if (curr.code == 0) break;\n        helpers.checkCommonEntityProperties(entity, curr, scanner);\n        curr = scanner.next();\n    }\n\n    return entity;\n};\n"],"mappings":"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"}]}