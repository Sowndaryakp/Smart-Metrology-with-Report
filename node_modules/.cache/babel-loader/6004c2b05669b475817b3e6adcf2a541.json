{"remainingRequest":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\Pattern.js","dependencies":[{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\dxf-viewer\\src\\Pattern.js","mtime":1704432456000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\babel.config.js","mtime":1694764762000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704432454000},{"path":"C:\\Users\\SDC-8\\Desktop\\Sowndarya\\CMTI Projects\\SmartMetrology\\smart-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1704432454000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgVmVjdG9yMiB9IGZyb20gInRocmVlIjsKCi8qKgogKiBAdHlwZWRlZiBQYXR0ZXJuTGluZURlZgogKiBAcHJvcGVydHkge251bWJlcn0gYW5nbGUgTGluZSBhbmdsZSBpbiByYWRpYW5zLgogKiBAcHJvcGVydHkgez9WZWN0b3IyfSBiYXNlIEJhc2UgcG9pbnQgZm9yIHNjYWxpbmcsIHJvdGF0aW9uIGFuZCBhbmNob3JpbmcuIFswLDBdIGlmIG5vdCBzcGVjaWZpZWQuCiAqIEBwcm9wZXJ0eSB7VmVjdG9yMn0gb2Zmc2V0IE9mZnNldCBmb3IgbGluZSBpbnN0YW50aWF0aW9uLgogKiBAcHJvcGVydHkgez9udW1iZXJbXX0gZGFzaGVzIERhc2ggbGVuZ3Rocy4gU29saWQgbGluZSBpZiBub3Qgc3BlY2lmaWVkLiBOZWdhdGl2ZSBudW1iZXJzIGZvcgogKiAgc3BhY2VzLCBwb3NpdGl2ZSBmb3IgZGFzaGVzLCB6ZXJvIGZvciBkb3RzLgogKi8KCmV4cG9ydCBjbGFzcyBQYXR0ZXJuIHsKICAvKioKICAgKiBAcGFyYW0ge1BhdHRlcm5MaW5lRGVmW119IGxpbmVzCiAgICogQHBhcmFtIHtib29sZWFufSBvZmZzZXRJbkxpbmVTcGFjZSBMaW5lIG9mZnNldCBpcyBkZWZpbmVkIGluIGxpbmUgc3BhY2Ugd2hlbiB0cnVlLCBpbiBwYXR0ZXJuCiAgICogIHNwYWNlIHdoZW4gZmFsc2UuIFBhdHRlcm4gc3BhY2Ugb2Zmc2V0IGlzIHRoZSBvYnNlcnZlZCBiZWhhdmlvciBvZiBBdXRvRGVzayB2aWV3ZXIgZm9yCiAgICogIHBhdHRlcm5zIGRlZmluZWQgaW4gaGF0Y2ggZW50aXR5IGl0c2VsZi4KICAgKi8KICBjb25zdHJ1Y3RvcihsaW5lcywgbmFtZSA9IG51bGwsIG9mZnNldEluTGluZVNwYWNlID0gdHJ1ZSkgewogICAgdGhpcy5saW5lcyA9IGxpbmVzOwogICAgdGhpcy5uYW1lID0gbmFtZTsKICAgIHRoaXMub2Zmc2V0SW5MaW5lU3BhY2UgPSBvZmZzZXRJbkxpbmVTcGFjZTsKICB9CiAgc3RhdGljIFBhcnNlUGF0RmlsZShjb250ZW50KSB7CiAgICBjb25zdCBsaW5lcyA9IGNvbnRlbnQuc3BsaXQoL1xyP1xuLyk7CiAgICBpZiAobGluZXMubGVuZ3RoIDwgMikgewogICAgICB0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgLnBhdCBmaWxlIGNvbnRlbnQiKTsKICAgIH0KICAgIGxldCBuYW1lID0gbnVsbDsKICAgIGNvbnN0IGxpbmVEZWZzID0gW107CiAgICBmb3IgKGxldCBsaW5lIG9mIGxpbmVzKSB7CiAgICAgIGxpbmUgPSBsaW5lLnRyaW0oKTsKICAgICAgaWYgKGxpbmUgPT0gIiIpIHsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBpZiAobGluZS5zdGFydHNXaXRoKCI7IikpIHsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBpZiAobmFtZSA9PT0gbnVsbCkgewogICAgICAgIGNvbnN0IG0gPSBsaW5lLm1hdGNoKC9cKihbXixdKykoPzosLiopPy8pOwogICAgICAgIGlmICghbSkgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJCYWQgaGVhZGVyIGZvciAucGF0IGZpbGUgY29udGVudCIpOwogICAgICAgIH0KICAgICAgICBuYW1lID0gbVsxXTsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBjb25zdCBjb21tZW50UG9zID0gbGluZS5pbmRleE9mKCI7Iik7CiAgICAgIGlmIChjb21tZW50UG9zICE9IC0xKSB7CiAgICAgICAgbGluZSA9IGxpbmUuc3Vic3RyaW5nKDAsIGNvbW1lbnRQb3MpLnRyaW0oKTsKICAgICAgfQogICAgICBsZXQgcGFyYW1zID0gbGluZS5zcGxpdCgvXHMqLFxzKi8pOwogICAgICAvKiBUb2xlcmF0ZSB0cmFpbGluZyBjb21tYS4gKi8KICAgICAgaWYgKHBhcmFtc1twYXJhbXMubGVuZ3RoIC0gMV0gPT0gIiIpIHsKICAgICAgICBwYXJhbXMubGVuZ3RoID0gcGFyYW1zLmxlbmd0aCAtIDE7CiAgICAgIH0KICAgICAgcGFyYW1zID0gcGFyYW1zLm1hcChzID0+IHsKICAgICAgICBjb25zdCB4ID0gcGFyc2VGbG9hdChzKTsKICAgICAgICBpZiAoaXNOYU4oeCkpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiRmFpbGVkIHRvIHBhcnNlIG51bWJlciBpbiAucGF0IGZpbGU6ICIgKyBzKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHg7CiAgICAgIH0pOwogICAgICBjb25zdCBsaW5lRGVmID0gewogICAgICAgIGFuZ2xlOiBwYXJhbXNbMF0gKiBNYXRoLlBJIC8gMTgwLAogICAgICAgIGJhc2U6IG5ldyBWZWN0b3IyKHBhcmFtc1sxXSwgcGFyYW1zWzJdKSwKICAgICAgICBvZmZzZXQ6IG5ldyBWZWN0b3IyKHBhcmFtc1szXSwgcGFyYW1zWzRdKQogICAgICB9OwogICAgICBpZiAocGFyYW1zLmxlbmd0aCA+IDUpIHsKICAgICAgICBsaW5lRGVmLmRhc2hlcyA9IHBhcmFtcy5zbGljZSg1KTsKICAgICAgfQogICAgICBsaW5lRGVmcy5wdXNoKGxpbmVEZWYpOwogICAgfQogICAgcmV0dXJuIG5ldyBQYXR0ZXJuKGxpbmVEZWZzLCBuYW1lKTsKICB9Cn0KY29uc3QgcGF0dGVybnNSZWdpc3RyeU1ldHJpYyA9IG5ldyBNYXAoKTsKY29uc3QgcGF0dGVybnNSZWdpc3RyeUltcGVyaWFsID0gbmV3IE1hcCgpOwoKLyoqIEBwYXJhbSB7UGF0dGVybn0gcGF0dGVybiAqLwpleHBvcnQgZnVuY3Rpb24gUmVnaXN0ZXJQYXR0ZXJuKHBhdHRlcm4sIGlzTWV0cmljID0gdHJ1ZSkgewogIGlmICghcGF0dGVybi5uYW1lKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoIkFub255bW91cyBwYXR0ZXJuIGNhbm5vdCBiZSByZWdpc3RlcmVkIik7CiAgfQogIGNvbnN0IG5hbWUgPSBwYXR0ZXJuLm5hbWUudG9VcHBlckNhc2UoKTsKICBjb25zdCByZWdpc3RyeSA9IGlzTWV0cmljID8gcGF0dGVybnNSZWdpc3RyeU1ldHJpYyA6IHBhdHRlcm5zUmVnaXN0cnlJbXBlcmlhbDsKICBpZiAocmVnaXN0cnkuaGFzKG5hbWUpKSB7CiAgICBjb25zb2xlLndhcm4oYFBhdHRlcm4gd2l0aCBuYW1lICR7bmFtZX0gaXMgYWxyZWFkeSByZWdpc3RlcmVkYCk7CiAgICByZXR1cm47CiAgfQogIHJlZ2lzdHJ5LnNldChuYW1lLCBwYXR0ZXJuKTsKfQoKLyoqIEByZXR1cm4gez9QYXR0ZXJufSAqLwpleHBvcnQgZnVuY3Rpb24gTG9va3VwUGF0dGVybihuYW1lLCBpc01ldHJpYyA9IHRydWUpIHsKICByZXR1cm4gKGlzTWV0cmljID8gcGF0dGVybnNSZWdpc3RyeU1ldHJpYyA6IHBhdHRlcm5zUmVnaXN0cnlJbXBlcmlhbCkuZ2V0KG5hbWUudG9VcHBlckNhc2UoKSk7Cn0="},{"version":3,"names":["Vector2","Pattern","constructor","lines","name","offsetInLineSpace","ParsePatFile","content","split","length","Error","lineDefs","line","trim","startsWith","m","match","commentPos","indexOf","substring","params","map","s","x","parseFloat","isNaN","lineDef","angle","Math","PI","base","offset","dashes","slice","push","patternsRegistryMetric","Map","patternsRegistryImperial","RegisterPattern","pattern","isMetric","toUpperCase","registry","has","console","warn","set","LookupPattern","get"],"sources":["C:/Users/SDC-8/Desktop/Sowndarya/CMTI Projects/SmartMetrology/smart-frontend/node_modules/dxf-viewer/src/Pattern.js"],"sourcesContent":["import { Vector2 } from \"three\"\n\n/**\n * @typedef PatternLineDef\n * @property {number} angle Line angle in radians.\n * @property {?Vector2} base Base point for scaling, rotation and anchoring. [0,0] if not specified.\n * @property {Vector2} offset Offset for line instantiation.\n * @property {?number[]} dashes Dash lengths. Solid line if not specified. Negative numbers for\n *  spaces, positive for dashes, zero for dots.\n */\n\nexport class Pattern {\n    /**\n     * @param {PatternLineDef[]} lines\n     * @param {boolean} offsetInLineSpace Line offset is defined in line space when true, in pattern\n     *  space when false. Pattern space offset is the observed behavior of AutoDesk viewer for\n     *  patterns defined in hatch entity itself.\n     */\n    constructor(lines, name = null, offsetInLineSpace = true) {\n        this.lines = lines\n        this.name = name\n        this.offsetInLineSpace = offsetInLineSpace\n    }\n\n    static ParsePatFile(content) {\n        const lines = content.split(/\\r?\\n/)\n        if (lines.length < 2) {\n            throw new Error(\"Invalid .pat file content\")\n        }\n        let name = null\n        const lineDefs = []\n        for (let line of lines) {\n            line = line.trim()\n            if (line == \"\") {\n                continue\n            }\n            if (line.startsWith(\";\")) {\n                continue\n            }\n            if (name === null) {\n                const m = line.match(/\\*([^,]+)(?:,.*)?/)\n                if (!m) {\n                    throw new Error(\"Bad header for .pat file content\")\n                }\n                name = m[1]\n                continue\n            }\n            const commentPos = line.indexOf(\";\")\n            if (commentPos != -1) {\n                line = line.substring(0, commentPos).trim()\n            }\n            let params = line.split(/\\s*,\\s*/)\n            /* Tolerate trailing comma. */\n            if (params[params.length - 1] == \"\") {\n                params.length = params.length - 1\n            }\n            params = params.map(s => {\n                const x = parseFloat(s)\n                if (isNaN(x)) {\n                    throw new Error(\"Failed to parse number in .pat file: \" + s)\n                }\n                return x\n            })\n            const lineDef = {\n                angle: params[0] * Math.PI / 180,\n                base: new Vector2(params[1], params[2]),\n                offset: new Vector2(params[3], params[4])\n            }\n            if (params.length > 5) {\n                lineDef.dashes = params.slice(5)\n            }\n            lineDefs.push(lineDef)\n        }\n        return new Pattern(lineDefs, name)\n    }\n}\n\nconst patternsRegistryMetric = new Map()\nconst patternsRegistryImperial = new Map()\n\n/** @param {Pattern} pattern */\nexport function RegisterPattern(pattern, isMetric = true) {\n    if (!pattern.name) {\n        throw new Error(\"Anonymous pattern cannot be registered\")\n    }\n    const name = pattern.name.toUpperCase()\n    const registry = isMetric ? patternsRegistryMetric : patternsRegistryImperial\n    if (registry.has(name)) {\n        console.warn(`Pattern with name ${name} is already registered`)\n        return\n    }\n    registry.set(name, pattern)\n}\n\n/** @return {?Pattern} */\nexport function LookupPattern(name, isMetric = true) {\n    return (isMetric ? patternsRegistryMetric : patternsRegistryImperial).get(name.toUpperCase())\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAO,CAAC;EACjB;AACJ;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,iBAAiB,GAAG,IAAI,EAAE;IACtD,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;EAC9C;EAEA,OAAOC,YAAYA,CAACC,OAAO,EAAE;IACzB,MAAMJ,KAAK,GAAGI,OAAO,CAACC,KAAK,CAAC,OAAO,CAAC;IACpC,IAAIL,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAChD;IACA,IAAIN,IAAI,GAAG,IAAI;IACf,MAAMO,QAAQ,GAAG,EAAE;IACnB,KAAK,IAAIC,IAAI,IAAIT,KAAK,EAAE;MACpBS,IAAI,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC;MAClB,IAAID,IAAI,IAAI,EAAE,EAAE;QACZ;MACJ;MACA,IAAIA,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,EAAE;QACtB;MACJ;MACA,IAAIV,IAAI,KAAK,IAAI,EAAE;QACf,MAAMW,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,mBAAmB,CAAC;QACzC,IAAI,CAACD,CAAC,EAAE;UACJ,MAAM,IAAIL,KAAK,CAAC,kCAAkC,CAAC;QACvD;QACAN,IAAI,GAAGW,CAAC,CAAC,CAAC,CAAC;QACX;MACJ;MACA,MAAME,UAAU,GAAGL,IAAI,CAACM,OAAO,CAAC,GAAG,CAAC;MACpC,IAAID,UAAU,IAAI,CAAC,CAAC,EAAE;QAClBL,IAAI,GAAGA,IAAI,CAACO,SAAS,CAAC,CAAC,EAAEF,UAAU,CAAC,CAACJ,IAAI,CAAC,CAAC;MAC/C;MACA,IAAIO,MAAM,GAAGR,IAAI,CAACJ,KAAK,CAAC,SAAS,CAAC;MAClC;MACA,IAAIY,MAAM,CAACA,MAAM,CAACX,MAAM,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACjCW,MAAM,CAACX,MAAM,GAAGW,MAAM,CAACX,MAAM,GAAG,CAAC;MACrC;MACAW,MAAM,GAAGA,MAAM,CAACC,GAAG,CAACC,CAAC,IAAI;QACrB,MAAMC,CAAC,GAAGC,UAAU,CAACF,CAAC,CAAC;QACvB,IAAIG,KAAK,CAACF,CAAC,CAAC,EAAE;UACV,MAAM,IAAIb,KAAK,CAAC,uCAAuC,GAAGY,CAAC,CAAC;QAChE;QACA,OAAOC,CAAC;MACZ,CAAC,CAAC;MACF,MAAMG,OAAO,GAAG;QACZC,KAAK,EAAEP,MAAM,CAAC,CAAC,CAAC,GAAGQ,IAAI,CAACC,EAAE,GAAG,GAAG;QAChCC,IAAI,EAAE,IAAI9B,OAAO,CAACoB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;QACvCW,MAAM,EAAE,IAAI/B,OAAO,CAACoB,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;MAC5C,CAAC;MACD,IAAIA,MAAM,CAACX,MAAM,GAAG,CAAC,EAAE;QACnBiB,OAAO,CAACM,MAAM,GAAGZ,MAAM,CAACa,KAAK,CAAC,CAAC,CAAC;MACpC;MACAtB,QAAQ,CAACuB,IAAI,CAACR,OAAO,CAAC;IAC1B;IACA,OAAO,IAAIzB,OAAO,CAACU,QAAQ,EAAEP,IAAI,CAAC;EACtC;AACJ;AAEA,MAAM+B,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAAC;AACxC,MAAMC,wBAAwB,GAAG,IAAID,GAAG,CAAC,CAAC;;AAE1C;AACA,OAAO,SAASE,eAAeA,CAACC,OAAO,EAAEC,QAAQ,GAAG,IAAI,EAAE;EACtD,IAAI,CAACD,OAAO,CAACnC,IAAI,EAAE;IACf,MAAM,IAAIM,KAAK,CAAC,wCAAwC,CAAC;EAC7D;EACA,MAAMN,IAAI,GAAGmC,OAAO,CAACnC,IAAI,CAACqC,WAAW,CAAC,CAAC;EACvC,MAAMC,QAAQ,GAAGF,QAAQ,GAAGL,sBAAsB,GAAGE,wBAAwB;EAC7E,IAAIK,QAAQ,CAACC,GAAG,CAACvC,IAAI,CAAC,EAAE;IACpBwC,OAAO,CAACC,IAAI,CAAE,qBAAoBzC,IAAK,wBAAuB,CAAC;IAC/D;EACJ;EACAsC,QAAQ,CAACI,GAAG,CAAC1C,IAAI,EAAEmC,OAAO,CAAC;AAC/B;;AAEA;AACA,OAAO,SAASQ,aAAaA,CAAC3C,IAAI,EAAEoC,QAAQ,GAAG,IAAI,EAAE;EACjD,OAAO,CAACA,QAAQ,GAAGL,sBAAsB,GAAGE,wBAAwB,EAAEW,GAAG,CAAC5C,IAAI,CAACqC,WAAW,CAAC,CAAC,CAAC;AACjG"}]}